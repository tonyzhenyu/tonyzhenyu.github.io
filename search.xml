<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Blender 混合不同模型颜色</title>
    <url>/2020/09/23/ComputerGraphics/BlenderColorBlend/</url>
    <content><![CDATA[<h4 id="当两个网格相交时，添加动态材质混合和法线平滑以达到自然过渡。例如草和泥土与地面相交，沙坑与地面相交，山脉相交，悬崖相交等等。"><a href="#当两个网格相交时，添加动态材质混合和法线平滑以达到自然过渡。例如草和泥土与地面相交，沙坑与地面相交，山脉相交，悬崖相交等等。" class="headerlink" title="当两个网格相交时，添加动态材质混合和法线平滑以达到自然过渡。例如草和泥土与地面相交，沙坑与地面相交，山脉相交，悬崖相交等等。"></a>当两个网格相交时，添加动态材质混合和法线平滑以达到自然过渡。例如草和泥土与地面相交，沙坑与地面相交，山脉相交，悬崖相交等等。</h4><p><img src="https://devtalk.blender.org/uploads/default/optimized/2X/2/2c50dcbf0b48f83729a978eee6284bb1569835d7_2_690x290.jpeg" alt="混合效果"></p>
<p>为了实现以上实时混合的效果，查阅了相关资料，并且思考是如何在blender中实现。<br>在<code>unity</code>中实现的话，网友提供的思路是这样的：<br><a href="https://inresin.wordpress.com/2020/04/03/terrain-and-mesh-blending-in-unity/">https://inresin.wordpress.com/2020/04/03/terrain-and-mesh-blending-in-unity/</a><br><a href="https://www.youtube.com/watch?v=AZEvrn9C0X0">https://www.youtube.com/watch?v=AZEvrn9C0X0</a></p>
<h3 id="混合不同模型颜色"><a href="#混合不同模型颜色" class="headerlink" title="混合不同模型颜色"></a>混合不同模型颜色</h3><p>&emsp;&emsp;Blender 的底层是OpenGL，效果实现起来会跟大多数主流游戏引擎稍有区别。<br>&emsp;&emsp;blender中修改模型数据并不会出现在<code>Node Editor</code>中，工作原理会跟游戏引擎中的渲染管线稍有区别，并且要做到修改模型数据，就得走blender中提供的模型数据修改器的一套操作。</p>
<h3 id="若要进行实时修改需要对物体添加以下修改器："><a href="#若要进行实时修改需要对物体添加以下修改器：" class="headerlink" title="若要进行实时修改需要对物体添加以下修改器："></a>若要进行实时修改需要对物体添加以下修改器：</h3><pre><code>VertexWeightProximity
DataTransfer
Dynamic Paint</code></pre>
<h3 id="需要新建的物体信息："><a href="#需要新建的物体信息：" class="headerlink" title="需要新建的物体信息："></a>需要新建的物体信息：</h3><pre><code>vertex group : ProximityVertex
vertex color : PaintMap</code></pre>
<h3 id="需要的物体："><a href="#需要的物体：" class="headerlink" title="需要的物体："></a>需要的物体：</h3><p>&emsp;&emsp;一个地形和需要进行混合的物体。</p>
<p>&emsp;&emsp;原理简述：工作原理是将石头作为画板，将地板作为笔刷，<code>Dynamic Paint</code>组件实时调用笔刷和画布将对应的画布模型进行顶点颜色绘制。每次绘制产生一张纹理，运行时动态放到画布物体的顶点颜色上，其值为01空间内运算。拿到绘制贴图后可以在节点修改器中添加各种操作。例如贴图高度混合，渐变过滤等等。有兴趣可以进一步研究。</p>
<h2 id="关键步骤："><a href="#关键步骤：" class="headerlink" title="关键步骤："></a>关键步骤：</h2><ol>
<li>创建两个物体（地形、混合物体）</li>
<li>给地形添加 动态绘制修改器，并且把地形的动态绘制属性调整为<code>笔刷</code></li>
<li>给混合物体添加动态绘制修改器，把混合物体的<code>动态绘制</code>属性调整为<code>画布</code>，并且设置输出纹理到顶点颜色 <code>PaintMap</code>中</li>
<li>接着修改混合物体的法线，添加<code>VertexWeightProximity</code>，<code>DataTransfer</code> 修改器（注意修改器的顺序），并且把修改器参数调整为如下图参数。</li>
<li>下一步在节点编辑器中新建材质，新建两个着色器，使用mix shader 进行混合，把VertexColor当作MixShader的混合值进行混合</li>
<li>最后在按照自己的要求新增一些节点就可以完成了<br> <img src="https://i.loli.net/2020/09/25/OBLu2ERZG4PTvDl.png" alt="modifer3.png"><br> <img src="https://i.loli.net/2020/09/25/n5tusoNRiIrYW9B.png" alt="render3.png"><br> <img src="https://i.loli.net/2020/09/25/K6UYGs7QXzZODNT.png" alt="shadernode.png"><h3 id="添加了高度混合的物体混合"><a href="#添加了高度混合的物体混合" class="headerlink" title="添加了高度混合的物体混合"></a>添加了高度混合的物体混合</h3><h2 id="TADAA"><a href="#TADAA" class="headerlink" title="TADAA!!"></a>TADAA!!</h2><img src="https://i.loli.net/2020/09/25/rWcBioNxMuKEsTX.png" alt="render8-1.png"><br><img src="https://i.loli.net/2020/09/25/BkmG72nhvT1o4Vs.png" alt="render9-2.png"></li>
</ol>
<p>· 使用的贴图分辨率大小为1024;<br>注解：VertexWeightProximity，DataTransfer 修改器顺序不能混淆的原因是，VertexWeightProximity把顶点权重绘制到对应的顶点组中，而DataTransfer 是读取对应的顶点权重进行遮挡。<br>修改器中的相关信息不在此详细描述，有关资料可以查阅blender的API文档。</p>
<h2 id="已知限制"><a href="#已知限制" class="headerlink" title="已知限制"></a>已知限制</h2><ul>
<li>不能实时读取对应的混合材质，只能放到相应的着色组上进行关联。</li>
</ul>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>Shader</tag>
        <tag>Blend</tag>
      </tags>
  </entry>
  <entry>
    <title>小何客栈-</title>
    <url>/2020/08/01/index/</url>
    <content><![CDATA[<h1 id="欢迎光临！小何客栈！"><a href="#欢迎光临！小何客栈！" class="headerlink" title="欢迎光临！小何客栈！"></a>欢迎光临！小何客栈！</h1><p>小何客栈，做吃的我们是认真的！请感受环境认真休息！</p>
<hr>
<p>客栈今日</p>
<ul>
<li>坐席【空】 </li>
<li>人次【1】 </li>
<li>大堂【2人】 </li>
<li>客房【15间】</li>
</ul>
<hr>
<pre><code>餐点如下所示，图片不代表最终质量哦
小点 9¥
中点 12¥
大点 16¥
特点 18¥
顶点 24¥
臻点 32¥

+ 番茄炒蛋还不错
+ 冬瓜汤也挺香的
+ 玉米排骨汤好喝
+ 猪扒包</code></pre>
<hr>
<p>这是小何客栈的第一篇文章<br>❤🧡💛💚💙💜🤎🖤🤍<br>写点日常的的东西在这里。<br>无论是饭菜香味还是舒适的环境享受，富丽堂皇的总统套房，还有水天一色的游泳池，你想得到的东西在这里，你想不到的东西不在这里，欢迎下次游玩哦。<br>❤🧡💛💚💙💜🤎🖤🤍</p>
<hr>
<h3 id="学习指南"><a href="#学习指南" class="headerlink" title="学习指南"></a>学习指南</h3><ul>
<li>LOL</li>
<li>DNF</li>
<li>CF</li>
</ul>
<hr>
<h3 id="预订电话"><a href="#预订电话" class="headerlink" title="预订电话"></a>预订电话</h3><p>tel: 13231323188<br>wechat 同号</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>post</tag>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender渲染汽车Mazda rx7</title>
    <url>/2020/10/22/ComputerGraphics/BlenderRenderingCar/</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1603360275843&di=c4af824e2ae1a25c1c5765131d94dd6e&imgtype=0&src=http://n.sinaimg.cn/sinacn14/289/w657h432/20180805/755b-hhhczfa8313868.jpg" alt="Mazdarx-7"></p>
<h1 id="Mazda-RX-7"><a href="#Mazda-RX-7" class="headerlink" title="Mazda RX-7"></a>Mazda RX-7</h1><p>&emsp;&emsp;Mazda Rx-7是我比较喜欢的跑车之一，修长的车头和圆润的造型以及流线型的车身，非常适合各种改装手段，汽配城改装车小有名气的车也就是rx7。<br>&emsp;&emsp;RX-7是MAZDA旗下的跑车，日本跑车中代表性的一款，RX-7采用传统跑车标准的FR驱动配置，搭载五速手排变速箱，车尾造型一体化尾灯组是全车识别性最高的地方。<br>&emsp;&emsp;MAZDA RX-7与NSX、Supra、3000GT一样同为日本高性能化跑车的代表，但是由于RX-7略嫌诡异的身材、还有以转子心脏跻身性能跑车之林的剽悍本色，在大部分车迷的眼中，这部车一直是较另类的角色，是《假面骑士black rx》里面莱多隆战车的原型，也是《名侦探柯南》中安室透的爱车。</p>
<h1 id="模型来自于sketchfab"><a href="#模型来自于sketchfab" class="headerlink" title="模型来自于sketchfab"></a>模型来自于sketchfab</h1><p>&emsp;&emsp;拿到的模型并不是直接能用的，经过了一系列的修改后才能够正常使用，优点是材质区分的不错，不过就是太多。<br>&emsp;&emsp;整个模型的拓扑不是最好的，经过细分后明显能检查到断面和一些材质过渡区的材质误识别，修改拓扑还是关键。<br>&emsp;&emsp;整体模型的分层做的不错，但是模型的观察尺度只能停留在远处。<br><img src="https://i.loli.net/2020/10/22/GaqOPHy5XCVnrYv.png" alt="a1.png"></p>
<p><img src="https://i.loli.net/2020/10/22/bWRePTfk8gLNqd3.png" alt="a4.png"></p>
<h1 id="最终的渲染图片"><a href="#最终的渲染图片" class="headerlink" title="最终的渲染图片"></a>最终的渲染图片</h1><p><img src="https://i.loli.net/2020/10/22/xKUNQzyjM86LrV7.png" alt="render4.png"><br><img src="https://i.loli.net/2020/10/22/HYimN7pWRqMIrPu.png" alt="render5.png"></p>
<h2 id="材质"><a href="#材质" class="headerlink" title="材质"></a>材质</h2><ul>
<li>车身材质：<ul>
<li>为了凸显材质的层次，使用了<code>clearcoat</code>。</li>
<li>微平面使用与相机距离产生关系的噪波纹理用到<code>roughness</code>通道上。</li>
<li>颜色使用<code>fresnel </code>反射映射到hsv的hue通道上，使车身颜色在不同的角度观察有不一样的颜色。</li>
<li>尽量使车身保持光滑</li>
</ul>
</li>
<li>车灯材质：<ul>
<li>直接使用了法线贴图制作凹凸映射</li>
</ul>
</li>
<li>玻璃材质：<ul>
<li>透明<code>Alpha Hash</code></li>
<li>屏幕空间反射</li>
</ul>
</li>
<li>轮毂材质：<ul>
<li>各向异性的金属<code>anistropic</code></li>
</ul>
</li>
</ul>
<p><img src="https://i.loli.net/2020/10/22/1DYkseqRVwuNQvb.png" alt="a2.png"></p>
<h2 id="灯光"><a href="#灯光" class="headerlink" title="灯光"></a>灯光</h2><p>&emsp;&emsp;灯光使用了交叉的面光源作为顶光在整车上方往下投射，侧光源也使用的交叉面光源在左侧补光，装饰光源使用了点光源在车灯处进行点缀，三种灯光在不同的位置下建立的基础灯光系统。</p>
<h2 id="场景氛围"><a href="#场景氛围" class="headerlink" title="场景氛围"></a>场景氛围</h2><ul>
<li>雾气制造空气氛围（散射雾气）</li>
<li>纯黑天空无背景色（突出主体）</li>
<li>平面反射（blender中的平面反射只会作用在那些Roughness为0的材质上）</li>
<li>设置bloom的效果，阈值不要太低<br><img src="https://i.loli.net/2020/10/22/7nJkcbYKQjGseVo.png" alt="a3.png"><br><img src="https://i.loli.net/2020/10/22/31eSAz6pgGbRfqr.png" alt="a.png"></li>
</ul>
<h2 id="镜头"><a href="#镜头" class="headerlink" title="镜头"></a>镜头</h2><p>&emsp;&emsp;镜头选择了88焦段的<code>长焦镜头</code>，用于远处拍摄整车，并且没有选择虚焦的效果，因为在eevee上的虚焦表现可能不尽人意，效果并不太满意。</p>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>Shader</tag>
        <tag>Blend</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender渲染玻璃焦散</title>
    <url>/2020/10/22/ComputerGraphics/BlenderRenderingCautics/</url>
    <content><![CDATA[<p><img src="https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=3264915731,2306361361&fm=26&gp=0.jpg" alt="玻璃焦散"></p>
<p>&emsp;&emsp;焦散是指当光线穿过一个透明物体时，由于对象表面的不平整，使得光线折射并没有平行发生，出现漫折射，投影表面出现光子分散。<br>焦散，俗称“水光”，波光粼粼—即使指焦散现象。<br>&emsp;&emsp;光谱中的颜色映射关系，在RGB上面的映射顺序分别是蓝绿红。<br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1603365753747&di=87de1b4ca97243920dac904d27b76df3&imgtype=0&src=http://www.microsenso.com/ueditor/php/upload/image/20161110/1478756299163735.png" alt="光色关系"></p>
<h1 id="最终实现结果"><a href="#最终实现结果" class="headerlink" title="最终实现结果"></a>最终实现结果</h1><p>EEVEE中的效果:<br><img src="https://i.loli.net/2020/10/22/KuzVAkxqomZhNIr.png" alt="render3.png"><br>Unity中的效果:<br><img src="https://i.loli.net/2020/10/22/c2a5opzVLqvwghS.jpg" alt="a.jpg"></p>
<p>&emsp;&emsp;更高级的效果可以利用<code>RenderTexture</code>渲染，求各顶点到投射平面的交集做插值。</p>
<h1 id="利用光照结果制作"><a href="#利用光照结果制作" class="headerlink" title="利用光照结果制作"></a>利用光照结果制作</h1><p>制作解析，主要利用光照穿过物体产生影子，利用物体中<code>Dot(Normal,LightDir)</code>做渐变图的索引值，把需要穿透的面剔除，把需要留下的面保留。而利用内部光照从内往外照射产生对应的影子制作出焦散。</p>
<p>制作基础的光照系统：<br><img src="https://i.loli.net/2020/10/22/IBaeWlwcuiPENr9.png" alt="cauticsa.png"></p>
<h2 id="材质"><a href="#材质" class="headerlink" title="材质"></a>材质</h2><ul>
<li>主要属性：设置透明队列为Alpha Hashed，shadow Mode 为Alpha Hashed</li>
<li>节点：主要把阴影区域剔除，剩下的交给shadow Caster<br><img src="https://i.loli.net/2020/10/22/Uzrbvo9PupQTN26.png" alt="cauticsb.png"></li>
</ul>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>Shader</tag>
        <tag>Blend</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender 制作风格化水面</title>
    <url>/2020/09/21/ComputerGraphics/BlenderStylizedWaterMaterial/</url>
    <content><![CDATA[<h1 id="利用blender-中的材质节点创建风格化的水面"><a href="#利用blender-中的材质节点创建风格化的水面" class="headerlink" title="利用blender 中的材质节点创建风格化的水面"></a>利用blender 中的材质节点创建风格化的水面</h1><p>&emsp;&emsp;风格化水面，风格化水面的效果有时候看起来就会像油画一样，虽然有点抽象和扭曲，但勉强能看，和真实感水面比起来，各有千秋。</p>
<p><img src="https://i.loli.net/2020/09/25/fv8exm7jnOhVaqM.png" alt="风格化水面"></p>
<h3 id="风格化水面需要的一些实际效果："><a href="#风格化水面需要的一些实际效果：" class="headerlink" title="风格化水面需要的一些实际效果："></a>风格化水面需要的一些实际效果：</h3><ul>
<li>影子</li>
<li>反射</li>
<li>高光</li>
<li>纯色</li>
</ul>
<h3 id="产生的波纹形状："><a href="#产生的波纹形状：" class="headerlink" title="产生的波纹形状："></a>产生的波纹形状：</h3><p>&emsp;&emsp;可自定义波纹的形状，可加上噪波干扰，使其更加有风格化感觉。</p>
<h2 id="设计的渲染方案："><a href="#设计的渲染方案：" class="headerlink" title="设计的渲染方案："></a>设计的渲染方案：</h2><ul>
<li>波纹（单独使用物体制作假波纹效果）（可优化成动态绘制的波纹查找图）</li>
<li>水面（使用细分等级较高的水面用于产生反射的凹凸面，达到非光学平整表面）</li>
</ul>
<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><ol>
<li>创建水面模型和波纹模型</li>
<li>给水面模型添加<code>表面细分</code>和<code>顶点置换</code>的修改器，达到凹凸其表面的作用。</li>
<li>给波纹模型添加<code>表面细分</code>和<code>缩囊(shrinkwrap)</code>的修改器，将波纹模型<code>投影</code>到水面表面，但是要保留缝隙。</li>
<li>新建两个材质命名为<code>水面(water)</code>和<code>波纹(foam)</code>，修改材质参数如下。</li>
<li>设置场景光照做部分遮挡达到阴影投影到水表面，因为不需要折射和透明，所以投影放在模型表面也算合理。</li>
</ol>
<p><img src="https://i.loli.net/2020/09/25/QDkcUYS6GnfrgE5.png" alt="water_modifier.png"><br><img src="https://i.loli.net/2020/09/25/5bstlACSnTa8JgX.png" alt="shadernode_water.png"><br><img src="https://i.loli.net/2020/09/25/vKM1Yo4kL3S6maI.png" alt="shadernode_foam.png"></p>
<p>注解：水面材质的高光是通过视角方向向量减去模型表面向量再做绝对值得到的，因此在此基础上，无法避免一个交点的存在，后面可以把高光的算法优化。</p>
<h2 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h2><p>非常明显的缺点是波纹是模型投影到水面上的，因此，投影的距离值设置不好就会造成模型重叠面闪烁。并且两个模型之间是有缝的存在。</p>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>Shader</tag>
        <tag>Blender</tag>
      </tags>
  </entry>
  <entry>
    <title>复杂光照</title>
    <url>/2020/09/25/ComputerGraphics/ComplexLighting/</url>
    <content><![CDATA[<h1 id="渲染路径的区别"><a href="#渲染路径的区别" class="headerlink" title="渲染路径的区别"></a>渲染路径的区别</h1><p>两个渲染路径本身结构。</p>
<h2 id="Forward"><a href="#Forward" class="headerlink" title="Forward"></a>Forward</h2><ul>
<li>PerLight</li>
<li>Depth</li>
<li>ShadowCaster</li>
<li>DrawMesh</li>
</ul>
<h2 id="Deferred"><a href="#Deferred" class="headerlink" title="Deferred"></a>Deferred</h2><ul>
<li>G-Buffer<ul>
<li>Albedo</li>
<li>Specular</li>
<li>Roughness</li>
<li>Normal</li>
</ul>
</li>
<li>PerObject</li>
</ul>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>render</tag>
      </tags>
  </entry>
  <entry>
    <title>湖中小屋</title>
    <url>/2020/11/01/ComputerGraphics/LakeCabin/</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2020/11/01/hkarEnfseRt4lvm.png" alt="render-32.png"></p>
<hr>
<p>故事简介：<br>&emsp;&emsp;湖中小屋<br>&emsp;&emsp;这是一个我突发奇想的项目，在pintrest中找到了许多关于湖中岛的一些参考。按照想法中的故事情节或许是湖中荒废的岛屿，岛屿上有一户人家，喜欢独居。</p>
<hr>
<p style ="color: green;">项目规格:</p>

<ul>
<li>贴图上限2048*2048</li>
<li>贴图格式png</li>
<li>观察距离1.5米内</li>
<li>使用到模型顶点权重</li>
</ul>
<hr>
<p><img src="https://i.loli.net/2020/11/02/fqO8ILxGiX4UMjE.jpg" alt="lakecabin_ho&#39;sref"><br>参考图</p>
<hr>
<h1 id="完成的资源"><a href="#完成的资源" class="headerlink" title="完成的资源"></a>完成的资源</h1><p><img src="https://i.loli.net/2020/11/01/qNHodGlsRPp2E8V.png" alt="nonlight view.png"><br><img src="https://i.loli.net/2020/11/02/MabQSVWOoHv3rBg.jpg" alt="lakecabin_ho_sresources.jpg"></p>
<p>汇总：</p>
<ul>
<li>树<ul>
<li>灌木丛</li>
<li>草</li>
<li>落叶</li>
</ul>
</li>
<li>石头</li>
<li>地形</li>
<li>雾</li>
<li>房子</li>
<li>水面</li>
</ul>
<p>树：树干模型使用curve生成，利用树干的顶点权重生成对应的枝叶，生成数量为50，并且修改枝叶的法线投射到圆球上。<br>灌木丛：灌木丛模型，灌木丛使用跟树木一样的原理，唯一的不用就是生成数量减少。<br>草：面片模型，<code>alpha clip</code> 做透明裁剪，<code>transparency</code>做透射<br>落叶：面片弯曲模型，<code>alpha clip</code> 做透明度裁剪，<code>transparency</code>做透射<br>石头：石头模型，使用<code>mesh volume proximity</code> 做顶点权重，<code>data transfer</code>做法线传递。材质通过高度图混合。<br>地形：地形材质，使用<code>vertex position </code>的z轴进行映射做通道蒙版。<br>雾：<code>volume </code>材质，使用<code>object space mapping </code>做<code>noise texture</code>中的纹理uv，并且通过扰乱原本的uv做非平均特征体积雾。<br>房子：手动建模，优化方案：使用更加适合布尔切割的软件或者命令。<br>水面：水面的材质使用<code>transmission </code>属性做透射，使用<code>alpha hashed </code>做透明通道，水面反射使用roughness和平面反射辐射盒。水面的模型使用了海面修改器直接生成海面。</p>
<hr>
<h1 id="整合后"><a href="#整合后" class="headerlink" title="整合后"></a>整合后</h1><p>无全局光参与：<br><img src="https://i.loli.net/2020/11/02/aH8smdUOJg6ET2W.jpg" alt="lakecabin_ho&#39;srender-32-nonlight2"></p>
<p>全局光照明：<br><img src="https://i.loli.net/2020/11/02/1K5Lr3iwjSNfgks.jpg" alt="lakecabin_ho_srender-32"></p>
<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;blender中cycles的透明渲染是使用光线的采样数，光线采样数越低，z-depth的穿透能力越低，具体表现在z-depth通道在两个模型之后莫名变白。<br>&emsp;&emsp;blender中eevee使用到TAA的降噪技术，具体表现在直接采样数，采样数越高，合成样张越多，TAA通过每次查找上一样张的相同处和不同处进行合成，最终得出噪点较少的画面，同样也可用于抗锯齿。<br>&emsp;&emsp;渲染树木的最主要特点是更改树叶的直接法线，并且因为树叶使用模型空间的uv坐标，所以对贴图中的树叶大小把握要非常恰当，否则会出现比例不符合的现象。</p>
<hr>
<p>各种不同的角度<br><img src="https://i.loli.net/2020/11/02/gxA3Qn5iKHSqWF2.jpg" alt="lakecabin_ho&#39;srender-33"><br><img src="https://i.loli.net/2020/11/02/SALY9myRkcws4eC.jpg" alt="lakecabin_ho&#39;srender-38"><br><img src="https://i.loli.net/2020/11/02/nSJO81ztkDfFHTb.jpg" alt="lakecabin_ho&#39;srender-36"><br><img src="https://i.loli.net/2020/11/02/fgQjdMopb9XuKBz.jpg" alt="lakecabin_ho&#39;srender-40"><br><img src="https://i.loli.net/2020/11/02/QwyiHUFjz54fgE6.jpg" alt="lakecabin_ho_srender-34"><br><img src="https://i.loli.net/2020/11/02/yKjAhmzqe1rVG29.jpg" alt="lakecabin_ho&#39;srender-37"></p>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>render</tag>
      </tags>
  </entry>
  <entry>
    <title>简单光照模型和阴影匹配</title>
    <url>/2020/09/04/ComputerGraphics/LambertLightingInUnity/</url>
    <content><![CDATA[<style type="text/css">
r {color:red; font-weight: 700;}
g {color:green;font-weight: 700;}
y {color:yellow;font-weight: 700;}
</style>

<h1 id="兰伯特光照模型"><a href="#兰伯特光照模型" class="headerlink" title="兰伯特光照模型"></a>兰伯特光照模型</h1><h2 id="简单光照模型和阴影匹配"><a href="#简单光照模型和阴影匹配" class="headerlink" title="简单光照模型和阴影匹配"></a>简单光照模型和阴影匹配</h2><p>光照模型和阴影匹配是在基础渲染中非常重要而且不可缺失的一部分。</p>
<h3 id="兰伯特光照模型："><a href="#兰伯特光照模型：" class="headerlink" title="兰伯特光照模型："></a>兰伯特光照模型：</h3><h4 id="lambert-max-0-dot-N-L"><a href="#lambert-max-0-dot-N-L" class="headerlink" title="lambert = max(0,dot(N,L))"></a><code>lambert = max(0,dot(N,L))</code></h4><h3 id="半兰伯特光照模型"><a href="#半兰伯特光照模型" class="headerlink" title="半兰伯特光照模型:"></a>半兰伯特光照模型:</h3><h4 id="lambert-dot-N-L-0-5-0-5"><a href="#lambert-dot-N-L-0-5-0-5" class="headerlink" title="lambert = dot(N,L) * 0.5 +0.5"></a><code>lambert = dot(N,L) * 0.5 +0.5</code></h4><h3 id="RimLight边缘光"><a href="#RimLight边缘光" class="headerlink" title="RimLight边缘光"></a>RimLight边缘光</h3><h4 id="Rim-View-Vertex-Normal"><a href="#Rim-View-Vertex-Normal" class="headerlink" title="Rim = View * Vertex.Normal"></a><code>Rim = View * Vertex.Normal</code></h4><p>用于作为渐变纹理的索引会是这样：<br><code>uv = float2(Rim,Rim);</code></p>
<p>调整后的曲线：</p>
<h3 id="实现光照"><a href="#实现光照" class="headerlink" title="实现光照:"></a>实现光照:</h3><p>需要以下的核心操作</p>
<ul>
<li>包含库 Lighting.cginc</li>
<li>包含库 UnityCG.cginc</li>
<li>顶点着色器提供 worldNormal</li>
<li>顶点着色器提供 worldPos</li>
</ul>
<p>暴露的参数：</p>
<ul>
<li><code>_DiffuseColor</code></li>
<li><code>_SpecularColor</code></li>
<li><code>_GlossColor</code></li>
</ul>
<p>外部调用的：</p>
<ul>
<li><code>_LightColor0</code></li>
<li><code>_WorldSpaceCameraPos</code></li>
<li><code>UNITY_LIGHTMODEL_AMBIENT</code></li>
</ul>
<p>渲染路径会用到ForwardBase和ForwardAdd</p>
<ul>
<li>通俗的逐顶点<g>ForwardBase 会计算平行光和环境光逐顶点/SH光照和Lightmaps</g></li>
<li>通俗的逐像素<y>ForwardAdd 会计算额外的逐像素光源，每个Pass对应一个光源</y></li>
</ul>
<h3 id="只考虑平行光的情况下简单光照模型的基础实现是："><a href="#只考虑平行光的情况下简单光照模型的基础实现是：" class="headerlink" title="只考虑平行光的情况下简单光照模型的基础实现是："></a>只考虑平行光的情况下简单光照模型的基础实现是：</h3><pre><code>fixed3 worldNormal = normalize(i.worldNormal);
fixed3 worldLightDir = normalize(_WorldSpaceLightPos0.xyz);

fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;
fixed3 viewDir = normalize(_WorldSpaceCameraPos.xyz - i.worldPos.xyz);

fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb * max(0, dot(worldNormal, worldLightDir));    
fixed3 halfDir = normalize(worldLightDir + viewDir);
fixed3 specular = _LightColor0.rgb * _Specular.rgb * pow(max(0, dot(worldNormal, halfDir)), _Gloss);

fixed atten = 1;
fixed4 finnalColor = fixed4(ambient + (diffuse + specular) * atten, 1.0);</code></pre>
<h3 id="考虑其他光照情况下的光照模型是："><a href="#考虑其他光照情况下的光照模型是：" class="headerlink" title="考虑其他光照情况下的光照模型是："></a>考虑其他光照情况下的光照模型是：</h3><p>通常会放在逐像素的渲染路径下</p>
<pre><code>#ifdef USING_DIRECTIONAL_LIGHT
            fixed atten = 1.0;
#else
    //点光源的光照计算 通常会用在逐像素的光照路径下
    #if defined (POINT)
        float3 lightCoord = mul(unity_WorldToLight, float4(i.worldPos, 1)).xyz;
        fixed atten = tex2D(_LightTexture0, dot(lightCoord, lightCoord).rr).UNITY_ATTEN_CHANNEL;
    //聚光灯的光照计算 通常会用在逐像素的光照路径下
    #elif defined (SPOT)
        float4 lightCoord = mul(unity_WorldToLight, float4(i.worldPos, 1));
        fixed atten = (lightCoord.z &gt; 0) * tex2D(_LightTexture0, lightCoord.xy / lightCoord.w + 0.5).w * tex2D(_LightTextureB0, dot(lightCoord, lightCoor.rr).UNITY_ATTEN_CHANNEL;
    #else
        fixed atten = 1.0;
    #endif
#endif</code></pre>
<p>光照计算完成之后，效果只有光线没有影子，这时候需要捕获unity渲染好的影子叠加到渲染结果上。</p>
<h2 id="影子的实现："><a href="#影子的实现：" class="headerlink" title="影子的实现："></a>影子的实现：</h2><p>影子实现需要的包含库文件：</p>
<ul>
<li><code>autolight.cginc</code></li>
<li><code>lighting.cginc</code></li>
<li><code>UnityCG.cginc</code></li>
</ul>
<pre><code>struct v2f
SHADOW_COORDS(1)    //宏表示为定义一个float4的采样坐标，放到编号为1的寄存器中       
v2f vert (appdata_base v)           
TRANSFER_SHADOW(o)  //根据变换求解上面结构体中的float4坐标，unity5中采用的是屏幕空间阴影贴图        
fixed4 frag (v2f i) : SV_Target
fixed shadow = SHADOW_ATTENUATION(i); //根据贴图与纹理坐标对纹理采样得到shadow值。</code></pre>
<p>获取到的shadow 其中可以做任何操作，最终叠加到渲染结果上。</p>
<p>所以最后的光照加上影子的运算结果应该是：</p>
<pre><code>finalcolor = difuse * shadow + specular</code></pre>
<p>以后可以做一些简单的逐像素或者逐顶点的通用着色器了。</p>
<p>可以做成通用着色器后做可复用的叠加的一些效果。</p>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>体素渲染 voxel Rendering</title>
    <url>/2020/08/27/ComputerGraphics/voxelrendering/</url>
    <content><![CDATA[<h2 id="体素渲染"><a href="#体素渲染" class="headerlink" title="体素渲染"></a>体素渲染</h2><p>体素渲染的内存消耗量会很大，随着八叉树的细分等级增加，内存消耗量会成指数级增长。<br>建场，建8叉树。</p>
<pre><code>voxel rendering 
point cloud</code></pre>
<p>模型转换体素<br>体素转换成模型</p>
<p>图片转换成点阵云<br>点阵云转换成体素<br>体素转换成模型</p>
<h2 id="体素全局光照"><a href="#体素全局光照" class="headerlink" title="体素全局光照"></a>体素全局光照</h2><p>非常卡<br>适合体素型基础的游戏</p>
]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>rendering</tag>
        <tag>voxel</tag>
        <tag>future</tag>
      </tags>
  </entry>
  <entry>
    <title>未命名的游戏结构</title>
    <url>/2020/09/07/GameDesign/DreamaticGameDesign/</url>
    <content><![CDATA[<style type="text/css">
r {color:red; font-weight: 700;}
yellow {color: yellow ; font-weight: 700;}
g {color:green;font-weight: 700;}
purple{color:purple;font-weight: 700;}
blue{color:blue;font-weight: 700;}

</style>

<h1 id="缝合要素"><a href="#缝合要素" class="headerlink" title="缝合要素"></a>缝合要素</h1><hr>
<h2 id="Rogue-Like-核心"><a href="#Rogue-Like-核心" class="headerlink" title="Rogue Like 核心"></a>Rogue Like 核心</h2><p>没有局外成长，以最多4人的车队组成。<br>&emsp;&emsp;游戏流程：<br>&emsp;&emsp;挑选初始角色-&gt;选择愿望-&gt;初始战场（可选择路线）-&gt;通关战场-&gt;选择奖励品-&gt;下一个战场<br>&emsp;&emsp;<r>依次进行递进和循环、关卡数量越到后面怪物数值成长越高</r><br>&emsp;&emsp;<yellow>角色：角色有等级和成长属性以及潜力表、角色在通过战场后不会恢复血量、角色最多只有4个</yellow><br>&emsp;&emsp;愿望：获得道具、特殊能力、跳关<br>&emsp;&emsp;奖励品：出招卡、货币、角色、坐骑<br>战场：</p>
<ul>
<li>限时战场（限时完成规定任务即可）</li>
<li>解谜战场（怪物数量少、陷阱多、奖励丰富越阶奖励）</li>
<li>人质战场（可获得对应角色）</li>
<li>夺金战场（提高货币获得率）</li>
</ul>
<p>无战斗房间</p>
<ul>
<li>锻造屋（可升级武器）</li>
<li>神灵社（可升级出招卡或移除出招卡）</li>
<li>杂货铺（兜售道具和药水）</li>
<li>酒馆（招募或解散角色）</li>
</ul>
<p>&emsp;&emsp;战场比例，战场以</p>
<p>怪物分布：</p>
<hr>
<h2 id="出招卡："><a href="#出招卡：" class="headerlink" title="出招卡："></a>出招卡：</h2><p>出招顺序会依次循环，能够被打断（受伤、闪避、跳跃、EX、格挡、耐力值空槽）</p>
<p><yellow>N<sub>0</sub>➡N<sub>1</sub>➡N<sub>2</sub>➡N<sub>3</sub>➡N<sub>4</sub>➡N<sub>5</sub>➡…</yellow><br>&emsp;↘&emsp;↘&emsp;↘&emsp;↘&emsp;↘<br>C<sub>0</sub>➡C<sub>1</sub>➡C<sub>2</sub>➡C<sub>3</sub>➡C<sub>4</sub></p>
<p>固定的牌型：<br>C<sub>0</sub>BUFF/震气/突刺/剑气/长距离攻击<br>C<sub>1</sub>小浮空<br>C<sub>2</sub>小横扫/小突刺/连击<br>C<sub>3</sub>横扫<br>C<sub>4</sub>大浮空/大横扫</p>
<p>按照出招类型分类：</p>
<ul>
<li>N卡(Normal)=普通攻击<ul>
<li>冲刺攻击</li>
<li>空中攻击</li>
</ul>
</li>
<li>C卡(Charge)=蓄力攻击<ul>
<li>空中C技</li>
</ul>
</li>
<li>EX(extra)技能</li>
<li>翻滚闪避</li>
<li>B卡(Block)=格挡</li>
</ul>
<p>获得的出招卡只能是固定位置的出招卡例如C1\C2\C3都是单独的卡，出招卡按照不同的颜色进行分类，红蓝绿紫青。</p>
<p>按照颜色风格分类如下：</p>
<ul>
<li><r>红= 力量(熔岩)</r></li>
<li><blue>蓝= 敏捷(冰川)</blue></li>
<li><g>绿= 状态伤害(丛林)</g></li>
<li><purple>紫= 变化(神圣)</purple></li>
<li>无色 = 创造(虚空)</li>
</ul>
<p>详细：</p>
<ul>
<li>出招卡没有升级品质(品质唯一)</li>
<li>出招循环与打断</li>
<li>出招卡删除只能在神灵社处删除</li>
<li>增加出招卡在获得道具奖励时可增加，增加位置由获得的出招卡决定。</li>
</ul>
<hr>
<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p>角色拥有天赋<br>等级成长潜力<br>六边形战士比较难得</p>
<hr>
<h2 id="重点内容"><a href="#重点内容" class="headerlink" title="重点内容"></a>重点内容</h2><ul>
<li>只要游戏能产出职业和流派，基本上就能够达成初始目标。（短循环流派，变化型流派）</li>
<li>游戏手感非常重要</li>
<li>以20分钟左右为一局的游戏</li>
<li>无双大蛇的出招系统，鬼泣5的动作衔接，拼接型的出招表（可自定义，每过一关可选新增动作）</li>
<li>交互式场景（神界原罪中的火焰油电等环境影响）</li>
<li>用户黏度<ul>
<li>排位式成长(青铜-&gt;白银-&gt;黄金-&gt;钻石-&gt;最强王者)<r>衡量单位需要确定</r></li>
<li>多人联机战场乱入</li>
</ul>
</li>
<li>重点需要解决动画匹配的问题<h2 id="真三国无双四的修罗模式（Rogue-Like核心）"><a href="#真三国无双四的修罗模式（Rogue-Like核心）" class="headerlink" title="真三国无双四的修罗模式（Rogue Like核心）"></a>真三国无双四的修罗模式（Rogue Like核心）</h2><ul>
<li>真三国无双四修罗模式中的数值成长和战场奇遇</li>
<li>随机身份和随机世界、随机种子定型（随机战场）</li>
<li>战场总地图表示方法-世界地图法</li>
<li>车队升级，怪物成长，是男人就撑到一百层</li>
</ul>
</li>
<li>无双大蛇的连招系统并行拼接法且黑魂耐力值</li>
<li>出招表位置数区间为（0,5）</li>
</ul>
<hr>
<h2 id="武器和遗物和药瓶"><a href="#武器和遗物和药瓶" class="headerlink" title="武器和遗物和药瓶"></a>武器和遗物和药瓶</h2><p>武器：</p>
<ul>
<li>武器不能决定出招方式。</li>
<li>武器决定出招速度、僵直、前后摇时间和出招范围。<br>武器素材：<br>能够制作武器（在锻造屋处）<br><yellow>遗物可以改变和创造机会（可以打破一些固有限制，同时也会有副作用效果）</yellow><br><yellow>服装可以改变角色样子</yellow><br>药瓶能够在使用时恢复血量</li>
</ul>
<hr>
<h2 id="用处不大的系统"><a href="#用处不大的系统" class="headerlink" title="用处不大的系统"></a>用处不大的系统</h2><ul>
<li>(备选)建造系统(<code>paralives</code>、<code>sims like建造系统</code>)</li>
<li>(备选)末日生存</li>
<li>背包系统界面（刀剑神域）<ul>
<li>泰拉瑞亚的装备库</li>
<li>换装（黑魂3）翅膀、移动速度表现(QQ三国中的移动速度以动作切换)</li>
<li>神界原罪装备属性</li>
</ul>
</li>
<li>日夜循环和天气季节系统（实现了一点点）</li>
<li>程序化生成模型内容（更改数量，高低，长短，队列）</li>
</ul>
<p>装备系统<br>参考QQ三国，DNF，神界原罪<br>&emsp;&emsp;神界原罪中的装备系统，装备能跟上等级的成长，但是在实际的<code>药品</code>，<code>投掷物</code>和<code>卷轴</code>都没有随着等级跟着成长，而且大多数的收集制作道具在前中后期都成为了摆设，占用了背包空间，也没有起到实际作用，很多时候购买到的装备都能比手作装备品质好，制作的过程也会比较麻烦，虽然说专门去收集还是能体验到乐趣，但是往往某些固定道具总是会比制作的道具好，就直接碾压了自己制作装备道具的初衷。另外，装备品质分为白、绿、蓝、紫、红、黄的六个品质，并没有在每个阶段都产出，品质越高的装备往往只能在高等级的时候才能得到，也就直接导致了一个断层现象的出现，或者等级秒杀的现象。<br>&emsp;&emsp;QQ三国中的装备系统较为复杂，有一些精良的设计在里面，比如<code>宝石镶嵌</code>、<code>装备关系</code>，和装备属性都是值得参考的一点，不过作为MMORPG最主要的还是骗氪，作为能不氪就不氪的穷人，只能靠实际时间换游戏币，搬砖也成为了MMORPG的日常。<br>&emsp;&emsp;DNF地下城与勇士，</p>
]]></content>
      <categories>
        <category>GameDesign</category>
      </categories>
      <tags>
        <tag>GameDesign</tag>
      </tags>
  </entry>
  <entry>
    <title>我的游戏开发进度#01</title>
    <url>/2020/09/29/MyGameProcess/Dialog01/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>MyGameDialog</category>
      </categories>
      <tags>
        <tag>vlog</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年2月18日工作总结</title>
    <url>/2021/02/18/Others/2021%E5%B9%B42%E6%9C%8818%E6%97%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="项目总结（季度总结）"><a href="#项目总结（季度总结）" class="headerlink" title="项目总结（季度总结）"></a>项目总结（季度总结）</h2><p>一句话总结：<br>死的程序编写容易，活的程序编写困难。<br>死的场景搭建容易，活的场景搭建困难。<br>经验之道，在于总结。</p>
<h2 id="小游戏资源："><a href="#小游戏资源：" class="headerlink" title="小游戏资源："></a>小游戏资源：</h2><ul>
<li>抓娃娃机</li>
<li>四个方形宝箱（包括渲染图）</li>
<li>一套角色皮肤（蝙蝠侠、小丑、忍者、皮卡丘）</li>
<li>一套道具模型（项链、帽子、墨镜、书包、围巾）</li>
<li>一些场景资源（可拉伸绳索，UI界面场景）</li>
<li>氛围性场景资源：深度雾效，广告板模型辉光，空间贴花，自发光面片灯光。</li>
</ul>
<h2 id="制作经验总结："><a href="#制作经验总结：" class="headerlink" title="制作经验总结："></a>制作经验总结：</h2><ul>
<li>延迟贴花</li>
<li>重塑面片法线</li>
<li>广告板技术重塑面片顶点</li>
<li>多物体组别制作（使用组别进行区分制作）</li>
<li>场景层级整理（制作排序）</li>
</ul>
<h2 id="提升制作效率的工具："><a href="#提升制作效率的工具：" class="headerlink" title="提升制作效率的工具："></a>提升制作效率的工具：</h2><p>效率工具对于多人团队协作是相当重要的一部分，或许在长期研发或者长线迭代中充当一个不可缺失的角色，于是在研发过程中我制作了许多提升效率的工具：</p>
<ul>
<li>关卡路线生成器（根据json表格配置生成对应的方块进行搭建的预览）</li>
<li>Shader debug查找器（对空引用及一些不需要使用到的shader进行查找）</li>
<li>绳索拉伸工具（在头尾之间直接生成线段）</li>
</ul>
<h2 id="渲染方面的研究（实时渲染方向）："><a href="#渲染方面的研究（实时渲染方向）：" class="headerlink" title="渲染方面的研究（实时渲染方向）："></a>渲染方面的研究（实时渲染方向）：</h2><pre><code>Sphere density 
Basic SDF (Sphere,cube,round cube)
Basic Raymarching
Plantry Atomspheric Scattering

Global illumination Appliation
Physics Basic Rendering Material

Texture Filtering 
Compression of Texture
Whole Forward Rendering Pipeline workflow</code></pre>
<h2 id="未来方向："><a href="#未来方向：" class="headerlink" title="未来方向："></a>未来方向：</h2><ul>
<li>mod资源创意工坊</li>
<li>基于XML,CSS,LUA的unity UI框架</li>
<li>深入实时渲染全面学习实时渲染的机制</li>
<li>实时建模（线段，贝塞尔曲线，球体）</li>
</ul>
<h2 id="U3d项目总结："><a href="#U3d项目总结：" class="headerlink" title="U3d项目总结："></a>U3d项目总结：</h2><h3 id="赛车："><a href="#赛车：" class="headerlink" title="赛车："></a>赛车：</h3><p>&emsp;&emsp;主要依靠while collider 或者手动使用rigidbody组件手动拼装弹簧，悬架，使车架悬浮在空中的同时受到物理驱动。要想做好整辆车的良好控制性能，需要深层研究车辆稳定性行驶以及阿克曼驱动模型。轮子是基本车辆行驶的最小单位，所以每个轮子的摩擦力和悬架高度以及轮子之间的距离都决定了整辆车的行驶性能。</p>
<h3 id="第一人称射击："><a href="#第一人称射击：" class="headerlink" title="第一人称射击："></a>第一人称射击：</h3><p>&emsp;&emsp;实现了FPS角色行走，跑动，跳跃，下蹲，潜行的基本操作模型，并且利用状态模式和独立公开的操作接口，让整个控制系统的可扩展性有一定的提高。在研究枪械系统时候，总结出枪械中的所有功能，如单发，连发，自动，并将其归类为统一枪械，当使用到不同的功能时候只需要在配置表中改变配置即可，类库都是预先写好公开的功能。</p>
<h3 id="横板卷轴平台跳跃："><a href="#横板卷轴平台跳跃：" class="headerlink" title="横板卷轴平台跳跃："></a>横板卷轴平台跳跃：</h3><p>&emsp;&emsp;横板卷轴滚动的游戏非常普遍。实现了基本的移动，跳跃，滑铲的基本操作功能，并且更深层的研究了各种状态下动画互相切换的状态机，使其更加灵活。在渲染方面研究了横板卷轴中的场景制作问题和视差问题，3D空间和2D平面空间虽然不是同一个维度，但是也会有相应的共同点可以进行互相转换，如《死亡细胞》中的角色渲染为3D但是相机的透视则是正交透视，场景内容都是正交透视制造出经典2D游戏视角，不过里面还蕴含着很深层的问题没有仔细去研究。</p>
<h3 id="对话游戏："><a href="#对话游戏：" class="headerlink" title="对话游戏："></a>对话游戏：</h3><p>&emsp;&emsp;对话游戏中的重点是如何将文档有序的显示到屏幕上，于是有了节点模式。而显示的内容将以什么方式或者什么样的样式放到屏幕上，于是有了基本UI样式框架。为了更加方便的编辑游戏内容，快速更新，我将游戏文档归类为关卡并且格式保存成一个普通可编辑的表格CSV文件。为了更佳的版本更新体验，我尽量保持在原则上不需要下载安装新包小心的进行更新。对话游戏作为最基础的游戏，让我在学习各类游戏制作中又有了更新的认识。开始从架构上思考软件的可运行性，改变了以往直接资源的制作方式，使用间接资源包的方式进行制作，目的增加多样性和拓展性的创意工坊。</p>
<h3 id="休闲音乐游戏："><a href="#休闲音乐游戏：" class="headerlink" title="休闲音乐游戏："></a>休闲音乐游戏：</h3><p>&emsp;&emsp;音乐游戏，音乐中的乐谱本身就是有序行进的编排，BPM则是作为按照每分钟会有多少个节拍被演奏的打点计时器。制作音乐游戏的难度在于同步画面和音频，音频中的节奏点和hitpoint都是一个得分点或者避障点。将乐谱中的每个音符转换为实际上的得分点和避障点进行游戏，生成在游戏中，对此进行打击判定，对判定产生的判定准确度进行评分。整个音乐游戏的结构大致如上。</p>
<h3 id="上帝视角射击游戏："><a href="#上帝视角射击游戏：" class="headerlink" title="上帝视角射击游戏："></a>上帝视角射击游戏：</h3><p>&emsp;&emsp;上帝视角射击的基本移动转向，动画转向是难题，手动瞄准的操作非常困难，能模仿出LOL手游中的手感将会作为此系列的高级应用。实现了子弹作为最基本单位的攻击系统，子弹有生命周期，出生死亡都会调用函数。更加高层的研究和应用会在LOL手游上线国服之后进行更加深度的研究。</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>2021年7月17日工作总结</title>
    <url>/2021/07/17/Others/2021%E5%B9%B47%E6%9C%8817%E6%97%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="工作总结（季度总结）"><a href="#工作总结（季度总结）" class="headerlink" title="工作总结（季度总结）"></a>工作总结（季度总结）</h2><ul>
<li>随着图形学学习的深入，图形学方面的知识和论文有太多太多，世界如此之大。</li>
<li>做gameplay模块时在一步步的探索中时间不知不觉的流逝，但是手感还没有达到自己想要的效果。</li>
<li>blender 开源的发展越来越强大，随着研究blender的深入，开始接触了在blender中研究addon的编写和blender中的api。</li>
</ul>
<h2 id="旧项目资源（百变特工unity）："><a href="#旧项目资源（百变特工unity）：" class="headerlink" title="旧项目资源（百变特工unity）："></a>旧项目资源（百变特工unity）：</h2><ul>
<li>根据输入的氛围图批量制作对应题材的氛围图一共60张2周做完。</li>
</ul>
<h2 id="新游戏项目资源-末世打僵尸（UE4）："><a href="#新游戏项目资源-末世打僵尸（UE4）：" class="headerlink" title="新游戏项目资源-末世打僵尸（UE4）："></a>新游戏项目资源-末世打僵尸（UE4）：</h2><ul>
<li>制作了街道场景和医院场景</li>
<li>街道场景-新制作方法，根据贴图快速搭建（利用shoebox抠出无透视贴图）</li>
<li>一套新型的blender制作pbr模型流程（使用blender进行烘焙贴图或使用substance）</li>
<li>医院的场景实现了第二条的流程，精度非常高，还有制作一些动态资源（炮塔和卷帘门）并且在UE4里走了一遍模型烘焙的流程，遇到非常多的问题。</li>
<li>制作了UE4基础PBR的母材质，供美术同学使用，美术同学提出更多的功能需求将会逐一添加。</li>
<li>总结UE4的操作很反人类。</li>
<li>多人合作搭建场景时一定要注意小组的分配问题，主导辅助和资源创建的角色分配。不能一窝蜂的上传文件，svn是这方面的好帮手。</li>
</ul>
<h2 id="unity顶视角动作游戏制作的探索："><a href="#unity顶视角动作游戏制作的探索：" class="headerlink" title="unity顶视角动作游戏制作的探索："></a>unity顶视角动作游戏制作的探索：</h2><ul>
<li>动作控制器</li>
<li>操作管理器</li>
<li>相机跟踪控制器和虚拟相机</li>
<li>一些简单shader</li>
<li>A*寻路算法</li>
<li>贝塞尔曲线的应用</li>
</ul>
<p>&emsp;&emsp;Unity中的顶视角动作游戏项目探索，制作了基于状态机的一个动作系统，基本流畅运行，实现了走跑跳、滑铲跳、闪避、后跳、翻滚、攀爬、攻击连段、反向奔跑、充能攻击、受击、死亡、倒地、倒地站立的功能。制作过程中参考了非常多的游戏，如apex\黑魂\神界原罪等<br>&emsp;&emsp;实现了手机触摸按键和键盘输入按键的无缝切换，并且基于一个按键单元写出不同的按键行为如单击，双击，长按，按住的四种行为。<br>&emsp;&emsp;实现了建模软件中的动画资源制作流程线管的搭建，从blender到unity中导出的fbx数据进行适配使用unity中的重定向功能保证动画的准确运行。保证了动画师在blender中的一套带rigging的绑定控制器的同时能保证正确的导出动画资源。前期使用了mixamo中的动画资源和在unity商店中售卖的一些动作资源，还有从UE4中导出的动画资源都能按照骨骼重定向的功能对应匹配。<br>&emsp;&emsp;实现了智能相机跟踪，在接收到角色控制器中传来的消息时能按照自己的逻辑做出对应的相机跟踪功能。</p>
<p>用到最多的是线性代数的知识，矩阵向量坐标系和欧拉角都非常重要。<br>实现了广告板billboard shader 和一些简单的shader 。<br>重写了A*寻路算法，应用在基于2维平面上的方阵计算。</p>
<h2 id="提升制作效率的工具（截至至7-17）："><a href="#提升制作效率的工具（截至至7-17）：" class="headerlink" title="提升制作效率的工具（截至至7.17）："></a>提升制作效率的工具（截至至7.17）：</h2><ul>
<li>模型制作方面，贴图工具shoebox，uv工具uv packer ，材质烘焙工具bake helper.</li>
<li>UE4 ModularSnapSystem</li>
</ul>
<h2 id="渲染方面的研究（实时渲染方向）："><a href="#渲染方面的研究（实时渲染方向）：" class="headerlink" title="渲染方面的研究（实时渲染方向）："></a>渲染方面的研究（实时渲染方向）：</h2><p>重新通读了冯乐乐的unity shader入门精要。<br>计算机图形学入门-Games101 通读了一遍。巩固了基础，看到了图形学非常强大又非常庞大的一面。<br>光栅化实时渲染的流程用blender opengl过了一遍。<br>光线追踪的全局渲染流程，通读了one week raytracing 用c++生成的.ppm图像过了一遍。</p>
<h2 id="未来方向："><a href="#未来方向：" class="headerlink" title="未来方向："></a>未来方向：</h2><ul>
<li>学习更高级的实时渲染，熟悉更多的图形api和针对显卡的工作方式进行研究。</li>
<li>三维重建和CAD方面拓展。</li>
<li>希望能完全掌握blender和参与到blender中的开发。</li>
</ul>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>友情连接</title>
    <url>/2020/08/02/Others/blogroll/</url>
    <content><![CDATA[<center>让我看看是谁在线？</center>

<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>😊<a href="http://xinix.xyz/">XINIX</a><br>👀<a href="http://john097.github.io/Frotune-Space/">Fortune-Space</a><br>👀<a href="https://ahhhhhchiu.github.io/">这谁啊？小方人</a><br>👀<a href="http://47.112.250.242:5000/">qnyd:szj</a>]<br>👀<a href="https://meteorahyk.github.io/">yukang师兄</a></p>
<h3 id="另外一些有用处的网站"><a href="#另外一些有用处的网站" class="headerlink" title="另外一些有用处的网站"></a>另外一些有用处的网站</h3><ol>
<li><a href="http://tableconvert.com/">表格转换</a></li>
<li><a href="http://www.tinypng.com/">图片压缩tinyPNG</a></li>
<li><a href="http://www.shadertoy.com/">shader玩具</a></li>
<li><a href="http://www.gumroad.com/I/tOWta">BlenderAddon-QuickShape</a></li>
<li><a href="https://www.vuepress.cn/">vuepress写文档啊</a></li>
<li><a href="https://www.blendswap.com/">blender白嫖网</a></li>
<li><a href="http://sketchfab.com/">sketchfab白嫖</a></li>
<li><a href="https://polycount.com/">polycount</a></li>
<li><a href="http://wiki.polycount.com/wiki/">polycountwiki</a></li>
<li><a href="https://blenderartists.org/c/artwork/8">blenderartist</a></li>
</ol>
<h3 id="大佬的博客"><a href="#大佬的博客" class="headerlink" title="大佬的博客"></a>大佬的博客</h3><ol>
<li><a href="http://www.catlikecoding.com/">猫爱编程</a></li>
<li><a href="https://thebookofshaders.com/">BookOfSahders</a></li>
<li><a href="https://me.csdn.net/tjw02241035621611">tanjiepeng的shader博客</a></li>
<li><a href="https://ethanbecker70.tumblr.com/">ethanbecker的画画博客</a></li>
<li><a href="https://blog.csdn.net/qq_26999509">静风霁的CSDN</a></li>
<li><a href="https://gustavolsson.com/">gustavolsson Unity轮子哥</a> </li>
<li><a href="https://andrewmanq.github.io/">程序化生成城市</a></li>
<li><a href="https://www.iquilezles.org/www/index.htm">IQ大佬的干货文章</a></li>
<li><a href="https://blog.demofox.org/">Atrix256</a></li>
<li><a href="https://bost.ocks.org/mike/">Mike Bostock</a></li>
<li><a href="http://filmicworlds.com/">Filmic Worlds</a></li>
<li><a href="https://coffeefuelledcode.co.uk/author/nathan/">Nathan Bowman</a></li>
</ol>
<h3 id="文档网"><a href="#文档网" class="headerlink" title="文档网"></a>文档网</h3><ul>
<li><a href="https://developer.download.nvidia.cn/cg/">CGPROGRAM</a></li>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl">HLSL</a></li>
<li><a href="http://www.opengl.org/sdk/docs/man/">GLSL</a></li>
</ul>
<h3 id="素材网站"><a href="#素材网站" class="headerlink" title="素材网站"></a>素材网站</h3><ol>
<li><a href="https://www.easyicon.net/iconsearch/icon/">图标-ICON</a></li>
<li><a href="https://www.mixamo.com/#/">Mixamo角色动画</a></li>
<li><a href="https://www.poliigon.com/search">Polligon-实拍照片素材</a></li>
<li><a href="https://www.textures.com/">Textures-贴图网</a></li>
<li><a href="https://www.omnivirt.com/3d-photo-ads">Facebook Ads 3d-图片显示转换器</a></li>
<li><a href="https://texturehaven.com/">Textures Haven</a></li>
<li><a href="https://pxhere.com/">免费高清商业素材 pxhere</a></li>
</ol>
<h3 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h3><ol>
<li><a href="https://ac.scmor.com/">谷歌学术镜像</a></li>
<li><a href="https://www.jiumodiary.com/">鸠摩搜索</a></li>
<li><a href="http://gameprogrammingpatterns.com/">GameProgrammingPatterns</a> </li>
<li></li>
</ol>
<hr>
<h3 id="unity编辑器扩展"><a href="#unity编辑器扩展" class="headerlink" title="unity编辑器扩展"></a>unity编辑器扩展</h3><ol>
<li><a href="https://blog.csdn.net/xdestiny110/article/details/79372530">Unity Editor扩展入门(1) Unity Editor功能扩展所使用的文件夹</a></li>
<li><a href="https://blog.csdn.net/xdestiny110/article/details/79434027?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.nonecase">Unity Editor扩展入门(2) Unity Editor扩展功能的标准使用</a></li>
<li><a href="https://blog.csdn.net/xdestiny110/article/details/79596953?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase">Unity Editor扩展入门(3) 数据的保存</a></li>
<li><a href="https://blog.csdn.net/xdestiny110/article/details/79678922?utm_medium=distribute.pc_relevant.none-task-blog-title-5&spm=1001.2101.3001.4242">Unity Editor扩展入门(4) ScriptableObject</a></li>
<li><a href="https://github.com/Seneral/Node_Editor_Framework">节点编辑器插件</a></li>
</ol>
<hr>
<h3 id="一些学习资料"><a href="#一些学习资料" class="headerlink" title="一些学习资料"></a>一些学习资料</h3><p><a href="https://github.com/QianMo/X-PostProcessing-Library">故障屏幕后处理</a><br>实时全局光照基于IBL模式下的PRT预渲染<br><a href="https://zhuanlan.zhihu.com/p/102397700">实时光追</a><br><a href="https://www.zhihu.com/question/20286038/answer/779162419">什么是BRDF双向反射分布函数</a></p>
<hr>
<h3 id="我只能说用hexo建blog-写markdown真香"><a href="#我只能说用hexo建blog-写markdown真香" class="headerlink" title="我只能说用hexo建blog 写markdown真香"></a>我只能说用hexo建blog 写markdown真香</h3><ul>
<li><a href="https://www.jianshu.com/p/ea1eb11db63f">markdown图床</a></li>
<li><a href="https://sm.ms/">SM.MS</a></li>
<li><a href="https://www.jianshu.com/p/191d1e21f7ed/">markdown语法</a></li>
<li><a href="https://www.jianshu.com/p/ac6023cc9f11">Hexo笔记</a></li>
</ul>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>links</tag>
      </tags>
  </entry>
  <entry>
    <title>我入侵了何镇宇的</title>
    <url>/2020/08/09/Others/hezhenyu/</url>
    <content><![CDATA[<h1 id="入侵成功"><a href="#入侵成功" class="headerlink" title="入侵成功"></a>入侵成功</h1><blockquote>
<p>河镇鱼的电脑被我控制了</p>
</blockquote>
<blockquote>
<p>方LOL呀！！！</p>
</blockquote>
<p><span style="font-size:409px">河镇鱼生日快乐！</span></p>
<p><a href="http://www.pornhub.com" style="font-size:44px">方呢</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>hezhenyu</tag>
        <tag>fang</tag>
      </tags>
  </entry>
  <entry>
    <title>工作上的申请事项</title>
    <url>/2020/08/23/Others/%E5%B7%A5%E4%BD%9C%E4%B8%8A%E7%9A%84%E7%94%B3%E8%AF%B7%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h3 id="评选失败-实习期不够3个月"><a href="#评选失败-实习期不够3个月" class="headerlink" title="评选失败(实习期不够3个月)"></a>评选失败(实习期不够3个月)</h3><p>这是我第一次参与工作，已经107天。<br>实习期间工作认真负责，能够按时完成导师分发下来的工作任务。在不需要提交日报的情况下能够保持按时编写日报的习惯。出勤方面每天争取早到晚归，利用好公司资源完成自身工作的总结，积极参加公司内部培训课程，并认真独立完成课后习题。<br>与同事沟通上认真听取他人意见和建议，遇到问题积极向同事请教，查阅相关资料加以结合进行深入研究和拓展，争取花费更短的时间解决问题。向同事传递信息做到信息不漏传，多次核对同步，解决相应问题最后达成工作闭环。<br>在我参与的小游戏项目中，需要非常多的技术素养，抱着试一试的心态学习图形编程和C#代码编写，在学校也修读过计算机相关课程所以有一定基础，但深知自己技术不强，还得请教同事和查阅中英文资料进行学习并加以应用。实际例子就如本次小游戏中的无尽关卡效果和家园场景效果，除了每日任务和调用场景物件的一些功能其他功能基本上是自己独立完成的。家园中的日夜循环，无尽关卡中的平面反射，还有家园物件中的贴图规范。<br>重要的不是技术手段，更重要的是同事们的反馈和网上的资料才能够让整个工程加以完善。</p>
<h3 id="转正申请"><a href="#转正申请" class="headerlink" title="转正申请"></a>转正申请</h3><p>姓名：    zhenyuhe(何镇宇)    部门：    美术组    岗位：    3D美术设计师<br>入职日期：    2020-06-29    试用期到期日期：    2020-09-28    部门主管经理：    ###</p>
<p>请列出试用期的3-5项重点工作：</p>
<ol>
<li>独立完成小游戏家园场景的实现，其中包括模型制作、贴图绘制、着色器编写、材质制作、灯光烘焙和日夜循环系统。</li>
<li>完成了小游戏中无尽关卡的效果实现，其中是镜面反射的解决方案、世界空间的纹理贴合着色器、制定无尽关卡制作规则。</li>
<li>与同组人员共同完成搭建110个关卡，并把整体工作效率提升到每关1.5天产出。</li>
<li>独立完成编写工具关卡路线生成器，为后续的路线匹配工作效率又有提升，并且保证角色脚步不会与地面穿插。</li>
</ol>
<p>自我评价：<br>工作认真负责，能够按时完成导师分发下来的工作任务。保持按时提交日报的习惯。出勤方面每天争取早到晚归，利用好公司资源完成自身工作的总结。积极参加公司内部培训课程，并认真独立完成课后习题。沟通上认真听取他人意见和建议，遇到问题积极向同事请教，并自主查阅相关资料加以结合进行深入研究和拓展，争取在短时间解决相应问题。向同事传递信息做到信息不漏传，多次核对同步，解决相应问题最后达成工作闭环。</p>
<p>遇到的疑惑：<br>有时候并不能很好的与同事沟通，或发生小矛盾等。</p>
<p>建议：<br>建议人事方面加强新人培训和线下交流。</p>
<h3 id="新员工辅导表"><a href="#新员工辅导表" class="headerlink" title="新员工辅导表"></a>新员工辅导表</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>掌握制作达标的的关卡及基础贴图绘制    </p>
<ol>
<li>掌握关卡布局及基础构成，了解初级光影节奏，在关卡整合上有完整的气氛表达，空间感，有一定的叙事性。</li>
<li>可以绘制简单贴图并应用于项目组。</li>
</ol>
<p>完成shader向TA初级目标设定</p>
<ol>
<li>熟悉C#，了解shader基础算法；</li>
<li>熟悉3D渲染管线及shader工作流及shaderlab的API；</li>
<li>熟悉了解shader（CG，GLSL,HLSL至少一项），对卡通渲染一定了解;</li>
<li>熟悉unity性能检测工具（Profiler,Frame debugger,UWA/UPA）。</li>
<li>对项目组有一定技术向支撑作用。</li>
<li>对基础场景动效，动画原理有一定了解，并可以产生对项目组的支撑。</li>
</ol>
<p>沟通协作及责任承担    </p>
<p>有责任，有担当，可与各组各部门能产生有效的沟通协作，并达成相应目的，理解他人意思，并付诸行动解决问题。且有一定的抗压能力。</p>
<h4 id="实际完成情况："><a href="#实际完成情况：" class="headerlink" title="实际完成情况："></a>实际完成情况：</h4><p>独立完成小游戏家园场景的实现，其中包括模型制作、贴图绘制、着色器编写、材质制作、灯光烘焙和日夜循环系统。并且在基础关卡中，与同组人员共同完成搭建110个关卡，并把整体工作效率提升到每关1.5天产出。</p>
<ol>
<li>熟悉C#，独立完成使用C#编写工具关卡路线生成器，为后续的路线匹配工作效率又有提升，并且保证角色脚步不会与地面穿插。</li>
<li>熟悉CG语言和shader基础算法，并编写了相关效果shader，做了对应设备性能的优化。</li>
<li>对卡通渲染一定了解，优化了角色的卡通渲染着色器，并增加了相应的颜色选择功能。</li>
<li>完成了小游戏中无尽关卡的效果实现，其中是镜面反射的解决方案、世界空间的纹理贴合着色器、制定无尽关卡制作规范。初步达到了性能和画面的一个平衡点。</li>
<li>了解动画运动规律，制作了相应的场景动效，如火苗油桶，爆头肢解的特效。</li>
<li>能够承担实际项目技术支撑的作用。</li>
</ol>
<p>工作认真负责，能够按时完成导师分发下来的工作任务。保持按时提交日报的习惯。出勤方面每天争取早到晚归，利用好公司资源完成自身工作的总结。积极参加公司内部培训课程，并认真独立完成课后习题。沟通上认真听取他人意见和建议，遇到问题积极向同事请教，并自主查阅相关资料加以结合进行深入研究和拓展，争取在短时间解决相应问题。向同事传递信息做到信息不漏传，多次核对同步，解决相应问题最后达成工作闭环。</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>面试笔记</title>
    <url>/2022/08/04/Others/%E9%9D%A2%E8%AF%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="2022-0714-（IGG-阿尔宙斯）"><a href="#2022-0714-（IGG-阿尔宙斯）" class="headerlink" title="2022 0714 （IGG 阿尔宙斯）"></a>2022 0714 （IGG 阿尔宙斯）</h2><ul>
<li>urp中的绘制顺序是怎么样的？</li>
<li>过渡绘制怎么解决？</li>
<li>unity 半透明的乱序如何解决<ul>
<li>Depth Peeling 深度剥离 深度剥离算法 OpenGL深度剥离算法（Depth Peeling）半透明实现</li>
<li>unity 半透明渲染技巧(1)：固定深度法</li>
<li>顺序无关的半透明混合（OIT）</li>
<li>累积半透明抖动算法（时域数据）</li>
</ul>
</li>
<li>uitool kit</li>
<li>简单讲讲大地形渲染的技术<ul>
<li>nature render</li>
<li>ntk 插件</li>
</ul>
</li>
<li>毛发渲染中有哪些技术？<ul>
<li>ATI kajiya-kay anistropy brdf</li>
<li>处理半透明混合</li>
<li>动态骨骼和骨骼代理检测模型碰撞</li>
</ul>
</li>
<li>草地渲染 优化<ul>
<li>pre-z</li>
<li>early-z</li>
<li>hi-z occlusion culling</li>
<li>hiden-surface render</li>
<li>ue4 visible buffer Visibility Buffer </li>
</ul>
</li>
<li>URP线管和内置渲染线管的区别<ul>
<li>CG和HLSL区别是什么</li>
</ul>
</li>
<li>深度图depth 和normal是怎么渲染的？</li>
</ul>
<h2 id="2022-0721-（游族）"><a href="#2022-0721-（游族）" class="headerlink" title="2022 0721 （游族）"></a>2022 0721 （游族）</h2><ul>
<li>PBR 有什么光？漫反射 specular environment</li>
<li>dx渲染底层 vs 和ps 之间做了什么？</li>
<li>ps之后做了什么？</li>
<li>什么是IBL渲染？</li>
<li>3x3旋转矩阵有何特性？正交性</li>
<li>为什么要用PBR？</li>
<li>用什么工具做性能检测和测试？</li>
</ul>
<h2 id="2022-0803-劲舞团"><a href="#2022-0803-劲舞团" class="headerlink" title="2022 0803 (劲舞团)"></a>2022 0803 (劲舞团)</h2><ul>
<li>SRP batcher合并有哪些条件？</li>
<li>URP 的灯光渲染pass是如何执行的？</li>
<li>SSR 实现逻辑是什么？</li>
<li>镜面反射的实现逻辑是什么？</li>
<li>有实机在手机上测试过渲染性能嘛？用何种工具？</li>
</ul>
<h2 id="2022-0803-（欧美卡牌）"><a href="#2022-0803-（欧美卡牌）" class="headerlink" title="2022 0803 （欧美卡牌）"></a>2022 0803 （欧美卡牌）</h2><ul>
<li>简单讲一下URP里面的渲染管线？</li>
<li>性能优化应该从哪一方面入手？大致讲一下</li>
<li>SRP Batcher可以简单讲一下吗？</li>
<li>alpha test 和 alpha blend有什么区别？性能上有什么区别？</li>
<li>透明度处理上有哪些事情可以做？</li>
<li>抗锯齿有哪些算法可以简单讲一下吗？</li>
<li>quality setting可以从哪些方面入手去优化？</li>
<li>PBR渲染可以简单讲一下吗？</li>
<li>大型植被渲染有哪些点需要注意的？</li>
<li>高端设备和低端设备的优化方向有哪些？</li>
<li>shader的优化方向主要有哪些？</li>
<li>GPU中的带宽占用过高需要降低带宽，在图形方向有哪些处理？</li>
<li>在c#中有哪些容器？</li>
<li>list和dictionary的主要区别是什么？</li>
<li>类和结构体主要的区别是什么？</li>
</ul>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>resume</tag>
      </tags>
  </entry>
  <entry>
    <title>资源整理【表格】</title>
    <url>/2020/08/02/Resources/Models/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>编号</th>
<th>名称</th>
<th>类型</th>
<th>文件名</th>
<th>时间</th>
<th>物件数量</th>
<th>可直接使用</th>
<th>导出文件</th>
<th>动画</th>
<th>贴图</th>
<th>重置计划</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>宿舍</td>
<td>模型</td>
<td>dormitory 2</td>
<td>2018-04-24</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>飞行器</td>
<td>模型</td>
<td>aircraft</td>
<td>2018-04-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>太刀</td>
<td>模型</td>
<td>blader</td>
<td>2018-04-02</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>桥</td>
<td>模型</td>
<td>bridge</td>
<td>2018-05-04</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>匕首</td>
<td>模型</td>
<td>dagger</td>
<td>2018-05-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>石头</td>
<td>模型</td>
<td>rocks</td>
<td>2018-04-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>楼梯台阶</td>
<td>模型</td>
<td>Stairs</td>
<td>2018-04-23</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>59</td>
<td>树01（shader）</td>
<td>材质</td>
<td>tree</td>
<td>2018-09-17</td>
<td>3</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>地牢游戏资源</td>
<td>模型</td>
<td>dungeonGameAssestes</td>
<td>2018-04-25</td>
<td>30</td>
<td></td>
<td>有</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>角色chr_01</td>
<td>模型</td>
<td>chr_01</td>
<td>2018-10-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>13</td>
<td>三角顶房子</td>
<td>模型</td>
<td>house</td>
<td>2018-10-29</td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>132</td>
<td>程序化mask（shader）</td>
<td>材质</td>
<td>mask noise group</td>
<td>2019-06-01</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>14</td>
<td>桥1</td>
<td>模型</td>
<td>bridge</td>
<td>2018-03-24</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>135</td>
<td>卡通渲染人物（shader）</td>
<td>材质</td>
<td>[MaterialFactory]Cartoon shader to pixel</td>
<td>2019-07-06</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>15</td>
<td>集装箱</td>
<td>模型</td>
<td>container</td>
<td>2018-03-18</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>16</td>
<td>吊机</td>
<td>模型</td>
<td>container2</td>
<td>2018-02-15</td>
<td>17</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>17</td>
<td>石头1</td>
<td>模型</td>
<td>stone</td>
<td>2018-03-22</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>室内房间</td>
<td>模型</td>
<td>room</td>
<td>2018-03-27</td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>133</td>
<td>绑定化房子</td>
<td>绑定模型</td>
<td>Room_Working</td>
<td>2019-06-01</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>19</td>
<td>门</td>
<td>模型</td>
<td>doorblend</td>
<td>2018-03-10</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>20</td>
<td>药瓶</td>
<td>模型</td>
<td>drugbottle</td>
<td>2019-02-15</td>
<td>10</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>21</td>
<td>自然资源</td>
<td>模型</td>
<td>NatrueAssets_low_poly</td>
<td>2018-03-19</td>
<td>9</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>26</td>
<td>圆盾</td>
<td>模型</td>
<td>shield</td>
<td>2018-02-06</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>27</td>
<td>剑1</td>
<td>模型</td>
<td>swordwithcross</td>
<td>2018-02-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>28</td>
<td>星球（shader）</td>
<td>材质</td>
<td>Planet</td>
<td>2019-02-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>30</td>
<td>剑2</td>
<td>模型</td>
<td>swords</td>
<td>2018-09-18</td>
<td>4</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>31</td>
<td>剑3</td>
<td>模型</td>
<td>秩序之匙</td>
<td>2018-12-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>32</td>
<td>匕首2</td>
<td>模型</td>
<td>dagger</td>
<td>2018-09-17</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>33</td>
<td>木箱</td>
<td>模型</td>
<td>woodcube</td>
<td>2018-09-19</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>34</td>
<td>竹子</td>
<td>模型</td>
<td>bamboo</td>
<td>2018-10-12</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>35</td>
<td>黑洞（shader）</td>
<td>材质</td>
<td>BlackHole</td>
<td>2018-04-12</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>36</td>
<td>角色chr_02</td>
<td>模型</td>
<td>Body</td>
<td>2018-09-19</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>37</td>
<td>消融效果（shader）</td>
<td>材质</td>
<td>Dissloved</td>
<td>2018-09-07</td>
<td>5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>38</td>
<td>光照测试</td>
<td>模型</td>
<td>eeveetest</td>
<td>2018-06-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>39</td>
<td>眼球</td>
<td>模型</td>
<td>eyeball</td>
<td>2018-11-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>40</td>
<td>人脸雕刻01</td>
<td>模型</td>
<td>facesculpt</td>
<td>2018-12-30</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>41</td>
<td>女性人物</td>
<td>模型</td>
<td>female</td>
<td>2018-12-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>42</td>
<td>栅栏</td>
<td>模型</td>
<td>fence</td>
<td>2018-05-16</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>118</td>
<td>老茶桌1（场景渲染）</td>
<td>场景</td>
<td>HomeWorkScene1</td>
<td>2019-12-18</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>43</td>
<td>草坪</td>
<td>模型</td>
<td>grass</td>
<td>2018-03-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>44</td>
<td>草坪01</td>
<td>模型</td>
<td>grassfiled</td>
<td>2018-03-30</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>45</td>
<td>房子</td>
<td>模型</td>
<td>house_2.8</td>
<td>2018-11-10</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>46</td>
<td>房子图标</td>
<td>渲染</td>
<td>houseicon</td>
<td>2018-10-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>47</td>
<td>人物绑定ue4</td>
<td>绑定模型</td>
<td>Human Setup for ue 4</td>
<td>2019-05-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>48</td>
<td>人脸雕刻02</td>
<td>模型</td>
<td>human_character_learning</td>
<td>2018-10-27</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>49</td>
<td>键盘</td>
<td>模型</td>
<td>keyboard</td>
<td>2018-06-08</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>50</td>
<td>关卡设计</td>
<td>模型</td>
<td>level design</td>
<td>2018-11-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>51</td>
<td>帐篷</td>
<td>模型</td>
<td>level_village</td>
<td>2018-11-03</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>52</td>
<td>logo动画</td>
<td>视频</td>
<td>logotitle</td>
<td>2018-11-11</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>29</td>
<td>街道模块</td>
<td>模型</td>
<td>Roads</td>
<td>2014-05-09</td>
<td>37</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>24</td>
<td>铁砧</td>
<td>模型</td>
<td>anvil</td>
<td>2018-02-06</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>25</td>
<td>弓箭</td>
<td>模型</td>
<td>arrow</td>
<td>2018-02-06</td>
<td>5</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>53</td>
<td>室内房间01</td>
<td>场景</td>
<td>mydreamhouse</td>
<td>2018-12-26</td>
<td>58</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>54</td>
<td>神殿入口</td>
<td>模型</td>
<td>pillar</td>
<td>2018-05-08</td>
<td>26</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>55</td>
<td>大气层（shader）</td>
<td>材质</td>
<td>Planetab</td>
<td>2018-09-07</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>56</td>
<td>程序化水体（shader）</td>
<td>材质</td>
<td>ProcedualWater</td>
<td>2018-09-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>57</td>
<td>地铁场景</td>
<td>模型</td>
<td>subways</td>
<td>2018-02-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>58</td>
<td>树（shader）</td>
<td>材质</td>
<td>Terrian</td>
<td>2018-09-10</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>60</td>
<td>程序化水体01（shader）</td>
<td>材质</td>
<td>Water2</td>
<td>2018-09-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>61</td>
<td>程序化水体02（shader）</td>
<td>材质</td>
<td>watermake</td>
<td>2018-09-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>63</td>
<td>木桩</td>
<td>模型</td>
<td>Wood_Log_[HandPaint]</td>
<td>2018-09-26</td>
<td>5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>64</td>
<td>八方大盘 场景</td>
<td>场景</td>
<td>八方大盘</td>
<td>2018-09-11</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>66</td>
<td>室内设计练习 场景</td>
<td>场景</td>
<td>室内设计练习</td>
<td>2018-07-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>67</td>
<td>藤椒 场景</td>
<td>模型</td>
<td>藤椒</td>
<td>2018-06-14</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>68</td>
<td>盒子</td>
<td>模型</td>
<td>隐藏路线</td>
<td>2018-08-08</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>69</td>
<td>旋钮</td>
<td>模型</td>
<td>硬表面</td>
<td>2018-06-06</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>70</td>
<td>架子</td>
<td>模型</td>
<td>桌面散热架设想</td>
<td>2018-07-08</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>72</td>
<td>草堆场景</td>
<td>模型</td>
<td>[test]Cartoon shader</td>
<td>2019-02-14</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>73</td>
<td>人脸雕刻03</td>
<td>模型</td>
<td>sculpt</td>
<td>2019-06-17</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>74</td>
<td>角色古代武将chr_03</td>
<td>模型</td>
<td>Human_585 static</td>
<td>2019-06-30</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>75</td>
<td>角色chr_04</td>
<td>模型</td>
<td>test human</td>
<td>2019-04-28</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>76</td>
<td>人脸雕刻04</td>
<td>模型</td>
<td>facelight2.8</td>
<td>2018-12-31</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>77</td>
<td>低多边形角色</td>
<td>模型</td>
<td>human_male</td>
<td>2019-01-26</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>78</td>
<td>角色内莎chr_05</td>
<td>模型</td>
<td>Nessa 1</td>
<td>2019-07-17</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>特效模型</td>
<td>模型</td>
<td>AFXMeshforGameAssets</td>
<td>2018-05-17</td>
<td>4</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>79</td>
<td>角色chr_06</td>
<td>模型</td>
<td>Day-02-dogman</td>
<td>2019-07-30</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>80</td>
<td>角色chr_07</td>
<td>模型</td>
<td>Day-03</td>
<td>2019-07-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>81</td>
<td>角色chr_08</td>
<td>模型</td>
<td>Day-04 fullBodyGirl</td>
<td>2019-07-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>82</td>
<td>眼睛雕刻练习</td>
<td>模型</td>
<td>Day-05 EyeSculpt</td>
<td>2019-07-25</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>83</td>
<td>人脸雕刻05</td>
<td>模型</td>
<td>Day-05 Girl Head</td>
<td>2019-07-04</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>84</td>
<td>人脸雕刻06</td>
<td>模型</td>
<td>Day-05 Speed Sculpt face</td>
<td>2019-07-04</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>一堆碎石</td>
<td>模型</td>
<td>rocks_handPaint</td>
<td>2018-09-10</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>85</td>
<td>角色chr_09</td>
<td>模型</td>
<td>Day-06 SculptGirlWithHair2</td>
<td>2019-07-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>箱子</td>
<td>模型</td>
<td>Chest</td>
<td>2018-09-18</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>86</td>
<td>角色chr_10</td>
<td>模型</td>
<td>Day-07 Sculpt Human</td>
<td>2019-07-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>23</td>
<td>木桶1</td>
<td>模型</td>
<td>bowie</td>
<td>2018-09-19</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>87</td>
<td>角色chr_11</td>
<td>模型</td>
<td>Girl_0</td>
<td>2019-07-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>88</td>
<td>霸王龙</td>
<td>模型</td>
<td>TyrannosaurusRex</td>
<td>2019-04-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>89</td>
<td>霸王龙1</td>
<td>模型</td>
<td>TyrannosaurusRex1low with render</td>
<td>2019-06-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>93</td>
<td>剑7</td>
<td>模型</td>
<td>Sword_3</td>
<td>2019-06-11</td>
<td>0</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>65</td>
<td>浮游炮</td>
<td>模型</td>
<td>浮游炮</td>
<td>2018-10-17</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>96</td>
<td>剑9</td>
<td>模型</td>
<td>Concept Axe</td>
<td>2019-08-26</td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>97</td>
<td>下坡场景（合成）</td>
<td>场景</td>
<td>Sence_Drawing with 3demension</td>
<td>2019-07-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>98</td>
<td>木屋场景（合成）</td>
<td>场景</td>
<td>Sence_Drawing with 3demension_1</td>
<td>2019-07-27</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>99</td>
<td>桌面场景</td>
<td>场景</td>
<td>[EEVEE]Keyboard/1.blend</td>
<td>2018-12-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>100</td>
<td>标题（视频）</td>
<td>视频</td>
<td>font_render_aircrafttesting</td>
<td>2018-12-24</td>
<td>1</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>104</td>
<td>中世纪房屋资源</td>
<td>模型</td>
<td>[gameasesst]wooden broken house</td>
<td>2019-04-03</td>
<td>4</td>
<td></td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>105</td>
<td>木屋1</td>
<td>模型</td>
<td>[GameAssesst]WoodenHouse</td>
<td>2019-03-05</td>
<td>1</td>
<td></td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>106</td>
<td>基地场景</td>
<td>场景</td>
<td>GameScene_BornRoom</td>
<td>2019-12-10</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>107</td>
<td>中国拱门</td>
<td>模型</td>
<td>MemorialGate</td>
<td>2019-06-03</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>108</td>
<td>三菱EVO</td>
<td>模型</td>
<td>Evo_Lancer_Car</td>
<td>2019-05-12</td>
<td>1</td>
<td></td>
<td></td>
<td>有</td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>109</td>
<td>珠海赛道</td>
<td>模型</td>
<td>Road_Racing</td>
<td>2019-06-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>110</td>
<td>循环车库</td>
<td>场景</td>
<td>Room_Garage</td>
<td>2019-05-21</td>
<td>1</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>112</td>
<td>老茶桌（场景渲染）</td>
<td>场景</td>
<td>HomeWorkScene</td>
<td>2019-12-16</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>113</td>
<td>IntoTheArcade游戏资源</td>
<td>模型</td>
<td>[GameAssets]IntoTheArcade</td>
<td>2019-06-07</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>116</td>
<td>宝箱1</td>
<td>模型</td>
<td>chest</td>
<td>2019-11-26</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>117</td>
<td>工厂（场景）</td>
<td>场景</td>
<td>Factory</td>
<td>2019-06-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>119</td>
<td>灯塔</td>
<td>模型</td>
<td>lighthouse</td>
<td>2019-01-24</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>62</td>
<td>手绘冷兵器武器资源</td>
<td>模型</td>
<td>weapons</td>
<td>2019-02-14</td>
<td>8</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>120</td>
<td>程序化地形（shader）</td>
<td>材质</td>
<td>terrian_island</td>
<td>2019-01-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>121</td>
<td>游戏卡片</td>
<td>模型</td>
<td>card</td>
<td>2019-11-19</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>101</td>
<td>桌子设计</td>
<td>模型</td>
<td>[Furniture]_Moveable_desk</td>
<td>2019-02-16</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td>有</td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>130</td>
<td>带绑定的灯泡</td>
<td>模型</td>
<td>[Fruniture]LightBult</td>
<td>2019-02-24</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>122</td>
<td>一级减速器</td>
<td>模型</td>
<td>[HardSurface]FirstStage cylindrical reducer</td>
<td>2019-01-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>71</td>
<td>草堆</td>
<td>模型</td>
<td>Grass</td>
<td>2019-03-03</td>
<td>9</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>123</td>
<td>钢铁侠头部</td>
<td>模型</td>
<td>IornMan_Head</td>
<td>2019-04-11</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>103</td>
<td>我会编程游戏资源</td>
<td>模型</td>
<td>[GameAssest] Code me Now</td>
<td>2019-03-18</td>
<td>8</td>
<td>可</td>
<td>有</td>
<td>有</td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>90</td>
<td>剑4</td>
<td>模型</td>
<td>Sword_1</td>
<td>2019-04-03</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>124</td>
<td>无人机基础模型</td>
<td>模型</td>
<td>UAV_Setup</td>
<td>2019-04-12</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>95</td>
<td>巨剑8</td>
<td>模型</td>
<td>Newton Shield</td>
<td>2019-04-11</td>
<td>2</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>125</td>
<td>宿舍阳台（场景渲染）</td>
<td>场景</td>
<td>[INDOOR]Dormitory</td>
<td>2018-12-12</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>126</td>
<td>房子室内</td>
<td>场景</td>
<td>[INDOOR]House (2)</td>
<td>2018-12-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>115</td>
<td>武器基础模型</td>
<td>模型</td>
<td>Modular_Model Level</td>
<td>2019-04-18</td>
<td>6</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>木桶</td>
<td>模型</td>
<td>Boowie_rebuild</td>
<td>2019-04-21</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>127</td>
<td>老家房子</td>
<td>模型</td>
<td>[INDOOR]Myhouse</td>
<td>2019-01-24</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>128</td>
<td>瑞克和莫迪车库</td>
<td>模型</td>
<td>Sence_Lab</td>
<td>2019-06-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>114</td>
<td>武器架子模块</td>
<td>模型</td>
<td>[Box_Sence]Sence_Collection_weapons</td>
<td>2019-05-03</td>
<td>2</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>129</td>
<td>室内场景（场景渲染）</td>
<td>场景</td>
<td>[INDOOR]Room_progress2</td>
<td>2018-12-08</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>131</td>
<td>沙发</td>
<td>模型</td>
<td>[Fruniture]sofa</td>
<td>2019-02-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>134</td>
<td>神庙</td>
<td>模型</td>
<td>[INDOOR]jungle</td>
<td>2019-01-23</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>136</td>
<td>卡通材质工厂（shader）</td>
<td>材质</td>
<td>[MaterialFactory]Cartoon shader</td>
<td>2019-07-20</td>
<td>6</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>137</td>
<td>光滑手机反射材质（shader）</td>
<td>材质</td>
<td>CellPhone</td>
<td>2019-11-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>138</td>
<td>笔记本电脑材质（shader）</td>
<td>材质</td>
<td>Laptop</td>
<td>2019-06-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>139</td>
<td>小程序宣传动效（视频）</td>
<td>视频</td>
<td>CellphoneWithVedio</td>
<td>2019-11-17</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>140</td>
<td>室外大房子</td>
<td>场景</td>
<td>[OUTDOOR][BIG]house</td>
<td>2018-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>141</td>
<td>运动拍摄房子视频wright</td>
<td>视频</td>
<td>house_1</td>
<td>2019-05-13</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>142</td>
<td>程序化夜晚天空材质（shader）</td>
<td>材质</td>
<td>[Procedual Material]skybox</td>
<td>2019-01-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>94</td>
<td>长弓</td>
<td>模型</td>
<td>Bow</td>
<td>2019-06-20</td>
<td>3</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>102</td>
<td>宝箱</td>
<td>模型</td>
<td>Treasure chest Gold</td>
<td>2019-06-21</td>
<td>2</td>
<td>可</td>
<td>有</td>
<td>有</td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>143</td>
<td>产品VI渲染</td>
<td>场景</td>
<td>test_vi</td>
<td>2018-12-18</td>
<td>7</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>144</td>
<td>车辆独立悬挂绑定</td>
<td>绑定模型</td>
<td>[Rig]Car</td>
<td>2019-04-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>145</td>
<td>河边水车小屋</td>
<td>模型</td>
<td>river_warehouse_lowpoly</td>
<td>2019-06-27</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>146</td>
<td>街道桥梁场景</td>
<td>场景</td>
<td>bridge</td>
<td>2018-11-28</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>147</td>
<td>雷电发射特效</td>
<td>视频</td>
<td>FX_Expolore</td>
<td>2019-07-02</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>148</td>
<td>绿色消融特效</td>
<td>视频</td>
<td>FX_Expolore_disore</td>
<td>2019-07-02</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>149</td>
<td>樱桃炸弹特效</td>
<td>视频</td>
<td>Particle_FX_homeWork</td>
<td>2019-05-27</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>150</td>
<td>蝴蝶效应特效场景</td>
<td>视频</td>
<td>VFX_Butterfly Effect</td>
<td>2019-06-15</td>
<td>1</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>91</td>
<td>剑5</td>
<td>模型</td>
<td>Sword_1</td>
<td>2019-07-11</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>151</td>
<td>玻璃瓶爆破特效场景</td>
<td>视频</td>
<td>VFX_HomeWork</td>
<td>2019-06-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>152</td>
<td>烟雾箱子特效</td>
<td>视频</td>
<td>VFX_HomeWork_chestscene</td>
<td>2019-06-02</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>153</td>
<td>空间变化特效</td>
<td>视频</td>
<td>VFX_HomeWork_chestscene1</td>
<td>2019-06-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>154</td>
<td>魔法棒特效</td>
<td>视频</td>
<td>VFX_HomeWork1</td>
<td>2019-05-25</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>155</td>
<td>卡通爆炸特效</td>
<td>视频</td>
<td>[vfx]cartoon explosion</td>
<td>2019-03-27</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>156</td>
<td>绿色碰撞盒特效</td>
<td>视频</td>
<td>[VFX]Dissove</td>
<td>2018-12-29</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>157</td>
<td>卡通角色chr_12</td>
<td>模型</td>
<td>cartoon character</td>
<td>2019-06-08</td>
<td>1</td>
<td></td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>166</td>
<td>水晶塔</td>
<td>模型</td>
<td>37Test GameScene</td>
<td>2019-09-19</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>158</td>
<td>古烈角色chr_13</td>
<td>模型</td>
<td>Character gulie</td>
<td>2019-06-21</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>92</td>
<td>剑6</td>
<td>模型</td>
<td>Sword_2</td>
<td>2019-11-11</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>159</td>
<td>拓扑设置</td>
<td>测试</td>
<td>[setup]topology setup</td>
<td>2019-02-10</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>111</td>
<td>科幻头盔</td>
<td>模型</td>
<td>helmet</td>
<td>2019-11-21</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td>有</td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>160</td>
<td>greasepencil测试</td>
<td>测试</td>
<td>2.8b3dgreasepencil_car</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>161</td>
<td>城市角落渲染</td>
<td>场景</td>
<td>citykit</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>162</td>
<td>角色chr_14</td>
<td>模型</td>
<td>Human_Usage_Drawing 3d</td>
<td>2019-12-07</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>163</td>
<td>基础角色chr_15</td>
<td>模型</td>
<td>humanMale_standard</td>
<td>2019-01-24</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>164</td>
<td>简单光晕场景渲染</td>
<td>场景</td>
<td>p1</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>165</td>
<td>桌面场景</td>
<td>模型</td>
<td>vfx_bullet heat</td>
<td>2019-06-14</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>167</td>
<td>手绘科幻能源车</td>
<td>模型</td>
<td>[4399]modeltest</td>
<td>2019-10-13</td>
<td>1</td>
<td></td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>168</td>
<td>角色chr_16</td>
<td>模型</td>
<td>DUOYI_NET_Chr</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>169</td>
<td>中国拱门1</td>
<td>模型</td>
<td>KINGSOFT_Test_MemorialGate</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>196</td>
<td>卡通渲染居酒屋4</td>
<td>模型</td>
<td>米哈游测试题_居酒屋4</td>
<td>2020-04-02</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>170</td>
<td>居酒屋</td>
<td>模型</td>
<td>MIhayoTest</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>190</td>
<td>线条概念设计飞行器</td>
<td>模型</td>
<td>concept of aircraft</td>
<td>2020-04-22</td>
<td>4</td>
<td>可</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>198</td>
<td>科幻垃圾箱</td>
<td>模型</td>
<td>scifi_box</td>
<td>2020-04-22</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>171</td>
<td>剑鱼告示牌</td>
<td>模型</td>
<td>PerfectWordTest</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>181</td>
<td>模块化楼房</td>
<td>模型</td>
<td>Modular Building_1</td>
<td>2020-05-05</td>
<td>1</td>
<td>可</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>197</td>
<td>模块化建筑-4.26</td>
<td>模型</td>
<td>模块化建筑-4.26/Modular Building_1</td>
<td>2020-05-05</td>
<td>120</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>172</td>
<td>角色猫雕刻</td>
<td>模型</td>
<td>SweetCatty</td>
<td>2019-07-09</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>173</td>
<td>煤气罐</td>
<td>模型</td>
<td>Virtuos_test</td>
<td>2019-12-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>188</td>
<td>卡通渲染角色chr_14</td>
<td>模型</td>
<td>Abby-Chan_by_rukikuri_FIXED</td>
<td>2020-05-16</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>179</td>
<td>滑板</td>
<td>模型</td>
<td>skate board</td>
<td>2020-05-18</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>174</td>
<td>动漫外包资源</td>
<td>模型</td>
<td>动漫外包</td>
<td>2019-12-20</td>
<td>6</td>
<td></td>
<td></td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>175</td>
<td>天空城堡</td>
<td>场景</td>
<td>b1</td>
<td>2020-03-08</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>178</td>
<td>自行车</td>
<td>模型</td>
<td>bike</td>
<td>2020-05-21</td>
<td>1</td>
<td>可</td>
<td>有</td>
<td></td>
<td>有</td>
<td></td>
</tr>
<tr>
<td>176</td>
<td>弯曲修改器</td>
<td>模型</td>
<td>bend modifier study</td>
<td>2020-05-19</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>177</td>
<td>中世纪路标</td>
<td>模型</td>
<td>RoadSign_Medieval</td>
<td>2020-05-04</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>180</td>
<td>海底 鱼</td>
<td>视频</td>
<td>fish</td>
<td>2020-05-14</td>
<td>1</td>
<td></td>
<td></td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>182</td>
<td>滑板公园</td>
<td>模型</td>
<td>Modular Skate Park</td>
<td>2020-05-26</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>183</td>
<td>固戍租赁房</td>
<td>模型</td>
<td>ModularBuildingKit</td>
<td>2020-05-20</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>184</td>
<td>地铁模块</td>
<td>模型</td>
<td>Metro</td>
<td>2020-05-27</td>
<td>139</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>185</td>
<td>超市外景概念</td>
<td>场景</td>
<td>shopingmarketscene_007</td>
<td>2020-05-22</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>186</td>
<td>商场天台外景概念</td>
<td>场景</td>
<td>scene_01</td>
<td>2020-05-23</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>187</td>
<td>程序化螺旋楼梯（sverchock）</td>
<td>模型</td>
<td>Spiral Stairs_SV_Procedual modeling building props</td>
<td>2020-04-08</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>189</td>
<td>固戍租赁房1</td>
<td>模型</td>
<td>ModularBuildingKit (2)</td>
<td>2020-05-22</td>
<td>85</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>191</td>
<td>简化模型设计</td>
<td>模型</td>
<td>简化模型设计</td>
<td>2020-02-18</td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>192</td>
<td>光影练习（场景渲染</td>
<td>场景</td>
<td>光影练习</td>
<td>2020-03-28</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>193</td>
<td>光影练习2（场景渲染</td>
<td>场景</td>
<td>光影练习2</td>
<td>2020-04-01</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>194</td>
<td>光与色彩研究</td>
<td>测试</td>
<td>光与色彩</td>
<td>2020-04-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>195</td>
<td>卡通渲染建筑（场景渲染</td>
<td>场景</td>
<td>坚果动力-4.25/p1</td>
<td>2020-04-26</td>
<td>50</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>199</td>
<td>硬表面模型1</td>
<td>模型</td>
<td>hard surface</td>
<td>2020-05-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>200</td>
<td>线框模型测试</td>
<td>模型</td>
<td>线框模型测试</td>
<td>2020-05-15</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>201</td>
<td>商场内景概念</td>
<td>场景</td>
<td>f1</td>
<td>2020-06-05</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>203</td>
<td>动效MG视频渲染</td>
<td>视频</td>
<td>vedio_simpledeformchrbounce_001</td>
<td>2020-07-12</td>
<td>1</td>
<td>可</td>
<td></td>
<td>有</td>
<td></td>
<td></td>
</tr>
<tr>
<td>202</td>
<td>地铁内景概念</td>
<td>场景</td>
<td>metro</td>
<td>2020-06-02</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>data</tag>
        <tag>tables</tag>
      </tags>
  </entry>
  <entry>
    <title>【模块】对话模块</title>
    <url>/2022/08/03/mods/%E3%80%90%E6%A8%A1%E5%9D%97%E3%80%91%E5%AF%B9%E8%AF%9D%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h1 id="对话模块"><a href="#对话模块" class="headerlink" title="对话模块"></a>对话模块</h1><h3 id="文本模板设计"><a href="#文本模板设计" class="headerlink" title="文本模板设计"></a>文本模板设计</h3><h3 id="文本符号"><a href="#文本符号" class="headerlink" title="文本符号"></a>文本符号</h3><ul>
<li>花括号{}.花括号为段落.</li>
<li>方括号[].方括号里的内容为程序集种的函数.</li>
<li>圆括号().表达参数.</li>
<li># 代表全局变量.统一加ToString的方法</li>
</ul>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>初始化把所有的关键字和函数，反射一次，建立起函数和字符串的关联。之后如果使用到相关函数，直接可以用字符串匹配。</p>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li>读取解释器</li>
</ul>
<h3 id="存放位置"><a href="#存放位置" class="headerlink" title="存放位置"></a>存放位置</h3><p>储存在动态资源库StreamAssets</p>
<h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul>
<li>[TaskID(TaskID,NPCID)]</li>
<li>[Dialog(NPCID)]</li>
<li>[Ask(NPCID)]</li>
<li>[Case]</li>
<li>[AddTaskID(TaskID)]</li>
<li>[AddItem(ItemID,Number)]</li>
</ul>
<h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><ul>
<li>if </li>
<li>else</li>
<li>Switch</li>
<li>case</li>
</ul>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul>
<li>API文档</li>
<li>用户手册</li>
<li>添加函数</li>
</ul>
<h3 id="文本结构"><a href="#文本结构" class="headerlink" title="文本结构"></a>文本结构</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TaskID(1,3)</span><br><span class="line">&#123;</span><br><span class="line">    [Dialog(3)]那个谁站住别走!</span><br><span class="line">    [Dialog(4)]刚下火车是吗?</span><br><span class="line">    [Ask(4)]你从上海来吗?&#123;</span><br><span class="line">        [Case]上海&#123;</span><br><span class="line">            [Dialog(4)]那这个给你。</span><br><span class="line">            [AddItem(隔离券,14)]</span><br><span class="line">            [Dialog(4)]你跟着那边的人走吧。</span><br><span class="line">            [AddTaskID(2;3)]</span><br><span class="line">        &#125;</span><br><span class="line">        [Case]其他地方&#123;</span><br><span class="line">            [Dialog(4)]请出示48小时内的核酸证明</span><br><span class="line">            [Dialog(#CurrentNPC#)]#CurrentNPC.Name#检查了你的核酸检测报告</span><br><span class="line">            if [Action(#HeSuan#)]&#123;</span><br><span class="line">                [Dialog]你自由了</span><br><span class="line">                [AddTaskID(4)]</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                [Dialog]你寄了</span><br><span class="line">                [AddTaskID(5)]</span><br><span class="line">            &#125;</span><br><span class="line">            Switch(#HeSuan#)&#123;</span><br><span class="line">                Case(Green)&#123;</span><br><span class="line">                    [Dialog]你自由了</span><br><span class="line">                    [AddTaskID(4)]</span><br><span class="line">                &#125;</span><br><span class="line">                Case(Red)&#123;</span><br><span class="line">                    [Dialog]你寄了</span><br><span class="line">                    [AddTaskID(5)]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">那个谁站住别走!</span><br><span class="line">...</span><br><span class="line">刚下火车是吗?</span><br><span class="line">...</span><br><span class="line">你从上海来吗?</span><br><span class="line">    - 上海</span><br><span class="line">    - 其他地方</span><br><span class="line">选择上海</span><br><span class="line">...</span><br><span class="line">那这个给你</span><br><span class="line">...</span><br><span class="line">获得物品隔离券14个</span><br><span class="line">...</span><br><span class="line">你跟着那边的人走吧</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">选择其他地方</span><br><span class="line">...</span><br><span class="line">请出示48小时内核酸证明</span><br><span class="line">...</span><br><span class="line">当前npc检查了你的核酸检测报告</span><br><span class="line">...</span><br><span class="line">你自由了</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mods</category>
      </categories>
      <tags>
        <tag>mods</tag>
      </tags>
  </entry>
  <entry>
    <title>【模块】物体放置系统设计</title>
    <url>/2022/08/03/mods/%E3%80%90%E6%A8%A1%E5%9D%97%E3%80%91%E7%89%A9%E4%BD%93%E6%94%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="instancing-system"><a href="#instancing-system" class="headerlink" title="instancing system"></a>instancing system</h2><h3 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h3><h3 id="结构："><a href="#结构：" class="headerlink" title="结构："></a>结构：</h3><ul>
<li>List InstanceObject 指定为场景的container.</li>
<li>Monitor 显示器，显示生成的object，使用graphic.drawmeshinstance;</li>
<li>工具-笔刷，在editorview中创建instances;</li>
</ul>
<h3 id="设计原则："><a href="#设计原则：" class="headerlink" title="设计原则："></a>设计原则：</h3><ul>
<li><p>显示器运行在prefab中，prefab装载着instance Data.</p>
</li>
<li><p>显示器继承monoBehaviuor</p>
</li>
<li><p>控制显示器object的位置可以影响所有instance Data的显示位置.</p>
</li>
<li><p>编辑器显示器：运行在编辑器工具中</p>
</li>
<li><p>Runtime显示器：Mono物体中</p>
</li>
<li><p>数据应该都要存到Constant Buffer中.这样在shader中可以做tint的功能.</p>
</li>
<li><p>GameObject能够控制所有instance的transform.  </p>
</li>
<li><p>需要用到一个command buffer Draw所有Instances</p>
</li>
<li><p>command buffer装载所有的数据.</p>
</li>
<li><p>InstanceShader中接收并处理cbuffer的数据.</p>
</li>
<li><p>注册到RenderingSystem中(最后再接入)</p>
</li>
<li><p>Instance中需要一个个对应的列表材质进行setbuffer.而不是设置全局buffer.</p>
</li>
<li><p>shader中需要编写instanced structure接收buffer的数据.</p>
</li>
<li><p>bufferInfo中的结构尽量简化.</p>
</li>
<li><p>重新定义序列化的文件结构.</p>
</li>
<li><p>transform矩阵定义重构.</p>
</li>
<li><p>view Type 重构.</p>
</li>
<li><p>显示层级Isolated 单一化显示</p>
</li>
<li><p>最后读取静态序列化数据</p>
</li>
<li><p>完成吸色器的状态</p>
</li>
</ul>
<h3 id="测试到的问题："><a href="#测试到的问题：" class="headerlink" title="测试到的问题："></a>测试到的问题：</h3><ul>
<li><p>最大数组不能超过1024，超过时可以开一个新的data来避免1024溢出</p>
</li>
<li><p>待完善，笔刷距离patinting。(高优先级)</p>
</li>
<li><p>刷出来物体matrix的法线不匹配地形方向。</p>
</li>
<li><p>editor状态下没有显示物体.(高优先级)</p>
</li>
<li><p>笔刷状态卡顿比较严重（但是在游戏运行是卡顿可以解决）</p>
</li>
<li><p>笔刷刷的颜色需要对其进行伽马矫正(已经在shader中完成gamma矫正)</p>
</li>
<li><p>拾色器的颜色拾取出来颜色变暗.</p>
</li>
<li><p>Display中显示的buffer颜色数据不一致.</p>
</li>
<li><p>buffer 数据不一致.</p>
</li>
</ul>
<h3 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h3><ul>
<li>渲染物体</li>
<li>渲染材质</li>
<li>统一覆盖渲染材质</li>
<li>可控transform</li>
<li>分组（备用）</li>
</ul>
<h3 id="基本代码结构"><a href="#基本代码结构" class="headerlink" title="基本代码结构"></a>基本代码结构</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class InstancingData : scriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    SceneInstancingData data;</span><br><span class="line">&#125;</span><br><span class="line">class SceneInstancingData : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    Scene scene;</span><br><span class="line">    Material overriderMaterial;</span><br><span class="line">    InstanceObject[] objects;</span><br><span class="line">&#125;</span><br><span class="line">class Monitor</span><br><span class="line">&#123;</span><br><span class="line">    InstancingData sysdata;</span><br><span class="line"></span><br><span class="line">    void Display();</span><br><span class="line">    void Clear();</span><br><span class="line">    void Refresh();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实例对象的结构"><a href="#实例对象的结构" class="headerlink" title="实例对象的结构"></a>实例对象的结构</h3><ul>
<li>源模型</li>
<li>对应渲染材质</li>
<li>位置</li>
<li>旋转</li>
<li>大小</li>
<li>法线</li>
<li>颜色</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct InstanceObject&#123;</span><br><span class="line">    Mesh origin;</span><br><span class="line">    Material material;</span><br><span class="line">    Color objectColor;</span><br><span class="line">    Matrix4x4 matrix;</span><br><span class="line"></span><br><span class="line">    float3 position;</span><br><span class="line">    float3 rotation;</span><br><span class="line">    float3 localScale;</span><br><span class="line"></span><br><span class="line">    float3 up;</span><br><span class="line">    float3 right;</span><br><span class="line">    float3 forward</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public struct InstanceBuffer&#123;</span><br><span class="line">    public float4 _cColour;</span><br><span class="line">    public float3 _cPosition;</span><br><span class="line">    public float4 _cRotation;</span><br><span class="line">    public float3 _cLocalScale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CBUFFER_START(_CBufferInstance)</span><br><span class="line">float3 _cPosition;</span><br><span class="line">float4 _cRotation;</span><br><span class="line">float3 _cLocalScale;</span><br><span class="line">float4 _cColour;</span><br><span class="line">CBUFFER_END</span><br></pre></td></tr></table></figure>

<h2 id="笔刷-EditorTool"><a href="#笔刷-EditorTool" class="headerlink" title="笔刷 EditorTool"></a>笔刷 EditorTool</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><ul>
<li><p>笔刷形状</p>
</li>
<li><p>笔刷状态</p>
</li>
<li><p>有配置文件可以配置笔刷的详细设置。</p>
</li>
<li><p>显示_handles</p>
</li>
<li><p>设置当前的instanceData层级</p>
</li>
<li><p>编辑器中可视化数据</p>
</li>
<li><p>切换自动显示当前显示的数据</p>
</li>
</ul>
<h3 id="配置项-1"><a href="#配置项-1" class="headerlink" title="配置项"></a>配置项</h3><ul>
<li>工具快捷键<ul>
<li>快捷键B呼出笔刷</li>
<li>G lookAt笔刷位置</li>
<li>S 吸取指定位置的屏幕颜色</li>
<li>调节笔刷散布噪声级别</li>
</ul>
</li>
</ul>
<h3 id="工具状态"><a href="#工具状态" class="headerlink" title="工具状态"></a>工具状态</h3><ul>
<li>工具未初始化状态<ul>
<li>显示未初始化的提示</li>
</ul>
</li>
<li>橡皮擦模式<ul>
<li>shift 切换到橡皮擦模式</li>
<li>松开shift 切换回笔刷模式</li>
<li>shift + 左键清理笔刷范围内的数据</li>
</ul>
</li>
<li>笔刷模式<em>热键B</em><ul>
<li>左键放置数据</li>
</ul>
</li>
<li>调整大小模式 <ul>
<li>f进入调整模式</li>
<li>鼠标左右移动调整笔刷大小</li>
<li>鼠标上下移动调整笔刷射线高度</li>
<li>按住shift 调整精度变小</li>
<li>鼠标左键确定调整大小</li>
<li>鼠标右键取消并推出该模式</li>
</ul>
</li>
<li>调整密度模式<ul>
<li>shift + f 进入调整模式</li>
<li>鼠标左键确定调整大小</li>
<li>鼠标右键取消并退出该模式</li>
<li>最大密度为64位</li>
</ul>
</li>
<li>调整噪声权重模式<ul>
<li>D 进入调整模式</li>
<li>鼠标左键确定调整大小</li>
<li>右键取消并退出该模式</li>
<li>权重最大为1</li>
</ul>
</li>
<li>调整噪声强度模式<ul>
<li>shift + D进入该模式</li>
<li>鼠标左键确定调整大小</li>
<li>右键取消并退出该模式</li>
<li>噪声强度最大为5</li>
</ul>
</li>
<li>调整笔刷物体大小模式<ul>
<li>shift + S进入模式</li>
<li>鼠标左键确定调整大小</li>
<li>右键取消并退出该模式</li>
<li>大小最大为5</li>
</ul>
</li>
<li>调整笔刷颜色<ul>
<li>s直接吸取场景渲染中的颜色</li>
<li>或者出现一个圆盘，让用户自己调整颜色</li>
</ul>
</li>
<li>按住s键进入拾色器<ul>
<li>松开s键执行吸色功能</li>
<li>吸色模式旁边会有当前吸取的颜色提示</li>
</ul>
</li>
</ul>
<h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul>
<li>生成物体可配置</li>
<li>散布范围可配置</li>
<li>散布密度上限可配置</li>
<li>快捷键配置</li>
<li>笔刷形状</li>
<li>噪声形状</li>
<li>instance数据篡改</li>
</ul>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li><p>投射射线获取交点，在交点中根据交点平面的法线重建一个圆盘，在此圆盘上按照配置的物体密度重新投射射线检测交点。</p>
</li>
<li><p>如果在检测圆盘中已存在数据，检测圆盘中密度的数量，不超过最大密度进行放置。</p>
</li>
<li><p>编辑器中，打开笔刷后，检查场景中含有对应mono的物体，如果没有，则询问是否需要创建。</p>
</li>
<li><p>当存在mono物体，显示所有读取到的实例物体，编辑时，会按照顺序创建一个列表，并且可以使用快捷键切换到下一个instance data中进行编辑，每次切换的数据都会有提示。</p>
</li>
<li><p>每次成功刷上，记录当前位置。当下一次刷的时候对比上一次位置的距离，如果没超过阈值，则不执行笔刷刷数据的功能。反之则执行。</p>
</li>
<li><p>笔刷预览显示物体位置大小形状网格，并且有预览材质和预览shader.</p>
</li>
<li><p>第一次启动和使用都有提示界面出现进行配置.</p>
</li>
<li><p>如果没有加载上实例数据，则弹窗询问是否需要创建数据，确认后数据会保存在resources/instance目录里面.</p>
</li>
<li><p>笔刷绘制修改器，需要旋转、颜色、大小等属性随机，可以实现一个修改器并且添加内容即可.</p>
</li>
<li><p>随机颜色的修改器逻辑，需要参考到色卡和随机种等算法.</p>
</li>
</ul>
<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><ul>
<li><p>基于Editor 窗口的笔刷，在视窗中投射球体到场景中，放置物体。</p>
</li>
<li><p>用graphic.drawmesh显示已经放置的物体</p>
</li>
<li><p>判断球体中放置的物体的密度，物体密度会有上限。</p>
</li>
<li><p>Editor中绘制笔刷预览笔刷位置(handles)</p>
</li>
<li><p>可以吸附物体碰撞体进行放置物体</p>
</li>
<li><p>笔刷功能时屏蔽Unity的鼠标事件(指定事件)</p>
</li>
<li><p>拦截默认鼠标事件Event</p>
</li>
<li><p>预览位置按照距离着色</p>
</li>
<li><p>按下F键视角会移动到鼠标附近的位置LOOKAT</p>
</li>
<li><p>可通过笔刷删除已经布置的物体</p>
</li>
<li><p>按下翻页键可以切换当前的层级，instance”层级”.也就是instance scriptableobject</p>
</li>
<li><p>当层级里的instanceObject超过了1024个对象，那么则下次刷的时候自动寻找下一个没有满1024的层级。</p>
</li>
<li><p>当第一层已经达到1024个实例数据，需要策略切换到下一层再绘制.</p>
</li>
</ul>
<h3 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h3><ul>
<li>十六进制色彩转换</li>
<li>快捷键配置</li>
<li>配置面板GUI自定义</li>
<li>S 吸取指定位置的屏幕颜色</li>
<li>可以undo上一次刷的记录</li>
<li>可以把整个系统做成package</li>
<li>使整个工具与unity更加统一</li>
</ul>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul>
<li><p>根据法线变换整体的顶点坐标，矩阵变换，求法线的变换矩阵然后转换。</p>
</li>
<li><p>每个场景中创建一个储存数据的文件，该文件路径统一放在Resources，而且文件名与场景文件名字相同。如果该场景没有实例文件，调用笔刷后会提示是否要创建实例文件，如果是，则创建一个新的实例文件。</p>
</li>
<li><p>在游戏加载时，实际会创建一个实例，该实例用于显示所有储存在数据中的“物体”，用作数据的可视化。如果该场景没有实例文件，则进入待机模式，当场景发生变化后，又重新检测一遍是否有实例对象。</p>
</li>
<li><p>overlays Menu Custom 将层级的放在空格键可打开的overlay menu中，提高使用效率.</p>
</li>
<li><p>编辑器中实例数据可视化。</p>
</li>
<li><p>当缩小笔刷大小的时候，密度也随之上升。算是一个显而易见的bug.</p>
</li>
<li><p>将在编辑器中读取文件的静态方法抽象出来.做成一个通用的方法.</p>
</li>
<li><p>handles显示与模型匹配度较低，笔刷使用时感知力度较小.</p>
</li>
<li><p>刷出来的物体大小没有变化，旋转没有变换。</p>
</li>
<li><p>层级应该移动到overlays页面中，可以在overlays中对对应层级隐藏</p>
</li>
<li><p>笔刷稳定性运行检测再0617日完成.</p>
</li>
</ul>
<hr>
<ul>
<li>重点，修改颜色变化的功能.让其笔刷数据的颜色会随着一定规律变化，不太单调.</li>
<li>cbuffer显示后的数据和显示结果不一致.待修复</li>
<li>单一显示和整体显示的功能.</li>
<li>完善mono状态下的displayer</li>
<li>引导功能的完善.</li>
<li>说明手册和功能列表.使用文档.</li>
</ul>
<h1 id="施工compute-buffer"><a href="#施工compute-buffer" class="headerlink" title="施工compute buffer"></a>施工compute buffer</h1><ul>
<li>一个float 占4个字节</li>
<li>确定的结构</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct InstanceInfo</span><br><span class="line">&#123;</span><br><span class="line">    float3 position;</span><br><span class="line">    float4 rotation;</span><br><span class="line">    float3 localscale;</span><br><span class="line">    float4 color;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>(3+4+3+4)*4</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">重要参数</span><br><span class="line">uint args []</span><br><span class="line">&#123;</span><br><span class="line">    mesh.getindexcount(submeshindex),</span><br><span class="line">    instanceCount,</span><br><span class="line">    mesh.getindexstart(submeshindex),</span><br><span class="line">    mesh.getbasevertex(submeshindex),</span><br><span class="line">    0</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>indirect Arguments:</p>
</li>
<li><p>AppendsturctBuffer;</p>
</li>
<li><p>drawMeshInstance会分割批次</p>
</li>
<li><p>DrawMeshInstanceIndirect不会分割批次，保证了每个instanceId的顺序.</p>
</li>
<li><p>DMII: DrawMeshInstanceIndirect</p>
</li>
<li><p>每次一层layer设置新的offset;</p>
</li>
<li><p>如果使用sturcturedbuffer.一个material 只会有一个buffer数据被设置.并不会叠加数据.</p>
</li>
<li><p>DMII 中一个材质就相当于一个draw batch被传输.</p>
</li>
<li><p>重写文档.</p>
</li>
<li><p>使用每个id的值去设置顶部颜色产生有不一样的variation</p>
</li>
</ul>
]]></content>
      <categories>
        <category>mods</category>
      </categories>
      <tags>
        <tag>mods</tag>
      </tags>
  </entry>
  <entry>
    <title>【模块】相机对齐</title>
    <url>/2022/08/03/mods/%E3%80%90%E7%BC%96%E8%BE%91%E5%99%A8%E6%A8%A1%E5%9D%97%E3%80%91%E5%B0%86%E5%9C%BA%E6%99%AF%E8%A7%86%E5%9B%BE%E5%AF%B9%E9%BD%90%E5%88%B0%E7%9B%B8%E6%9C%BA%E4%B8%AD/</url>
    <content><![CDATA[<h1 id="将场景视图对齐到相机中"><a href="#将场景视图对齐到相机中" class="headerlink" title="将场景视图对齐到相机中"></a>将场景视图对齐到相机中</h1>]]></content>
      <categories>
        <category>mods</category>
      </categories>
      <tags>
        <tag>mods</tag>
      </tags>
  </entry>
  <entry>
    <title>图形学自我总结</title>
    <url>/2020/08/04/unity/ComputerGraphics/</url>
    <content><![CDATA[<style type="text/css">
r {color:red; font-weight: 700;}
yellow {color: yellow ; font-weight: 700;}
g {color:green;font-weight: 700;}
</style>

<h1 id="我学废了！"><a href="#我学废了！" class="headerlink" title="我学废了！"></a>我学废了！</h1><p>总结一些关于实时渲染的坑和知识，学废的请举手！</p>
<hr>
<h2 id="光照模型-光影不分家"><a href="#光照模型-光影不分家" class="headerlink" title="光照模型 光影不分家"></a>光照模型 光影不分家</h2><ul>
<li>冯氏光照模型</li>
<li>兰伯特光照模型</li>
<li>半兰伯特光照模型</li>
<li>基于物理渲染</li>
<li>IBL基于图片光照着色</li>
<li>利用渐变纹理实现伪BRDF</li>
</ul>
<hr>
<h2 id="shadow-阴影"><a href="#shadow-阴影" class="headerlink" title="shadow 阴影"></a>shadow 阴影</h2><ul>
<li>自定义阴影贴图</li>
<li>percentage closed soft shadow(pcss 阴影)</li>
<li>方差阴影</li>
</ul>
<hr>
<h2 id="变换-Transform"><a href="#变换-Transform" class="headerlink" title="变换 Transform"></a>变换 Transform</h2><ul>
<li>Vertex Offset 顶点变换</li>
</ul>
<hr>
<h2 id="纹理贴合-Texturing"><a href="#纹理贴合-Texturing" class="headerlink" title="纹理贴合 Texturing"></a>纹理贴合 Texturing</h2><ul>
<li><g>world align textrue(xyz) 基于世界坐标的无限延展贴图</g></li>
<li><g>height base blend texture 基于高度的材质混合</g></li>
<li><r>view position parallex 基于视图空间的视差效果</r></li>
</ul>
<hr>
<h2 id="反射-Reflection"><a href="#反射-Reflection" class="headerlink" title="反射 Reflection"></a>反射 Reflection</h2><ul>
<li>matcap 材质捕获 三维空间与二维空间之间的转换 低配cubemap，平面反射中要进行法线重置</li>
<li>cubemap 静态的cubemap反射，贴图效果比matcap好但是贴图体积大</li>
</ul>
<hr>
<h2 id="透明相关"><a href="#透明相关" class="headerlink" title="透明相关"></a>透明相关</h2><ul>
<li>Transparency 透射效果</li>
<li>Refraction 折射效果</li>
<li>渲染队列</li>
<li>Alpha Test (透明裁剪)</li>
<li>Alpha Blend(透明融合)</li>
</ul>
<hr>
<h2 id="map相关"><a href="#map相关" class="headerlink" title="map相关"></a>map相关</h2><ul>
<li><r>maskmap </r></li>
<li><g>RGBA channel mask 单通道贴图控制</g></li>
<li>ramp map 渐变式贴图</li>
<li><r>splatmap 地形材质混合</r></li>
<li><a href="https://zhuanlan.zhihu.com/p/27339998">47张map</a></li>
</ul>
<hr>
<h2 id="后处理相关"><a href="#后处理相关" class="headerlink" title="后处理相关"></a>后处理相关</h2><ul>
<li>NDC重建世界坐标</li>
<li>屏幕空间深度图</li>
<li>屏幕空间法线</li>
</ul>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>你不懂绑骨的痛</title>
    <url>/2020/09/06/unity/RiggingExp/</url>
    <content><![CDATA[<h1 id="角色绑定很多时候都很痛"><a href="#角色绑定很多时候都很痛" class="headerlink" title="角色绑定很多时候都很痛"></a>角色绑定很多时候都很痛</h1><p>很多时候有人并不懂绑骨的痛，到底有多痛。<br>绑骨和角色制作是一个角色扮演游戏中不可或缺的一部分，一个角色从建模到绑定也是非常煎熬的一部分，不仅仅因为匹配骨骼的蒙皮苦难，对于分离物件更加容易绑定蒙皮出错。</p>
<h1 id="角色绑骨"><a href="#角色绑骨" class="headerlink" title="角色绑骨"></a>角色绑骨</h1><ul>
<li>绑定骨骼定位</li>
<li>蒙皮skining</li>
<li>骨骼权重</li>
<li>ik骨骼和fk骨骼控制器的制作 customize visibility type</li>
</ul>
<h1 id="角色骨骼绑定方案设计"><a href="#角色骨骼绑定方案设计" class="headerlink" title="角色骨骼绑定方案设计"></a>角色骨骼绑定方案设计</h1><ul>
<li>提供初始裸模</li>
<li>检查模型后进行绑定，蒙皮骨骼运算</li>
<li>调整骨骼皮肤的权重</li>
<li>为模型制作控制器（手部脚部IK）</li>
<li>自定义控制器形状，并且设定仅导出蒙皮骨骼</li>
<li>坐标空间对齐一定要注意，若两个软件中的基础坐标空间不一致，需要进行矫正。带骨骼和层级的矫正一定要清楚哪些需要应用变换。</li>
</ul>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Blender</tag>
        <tag>unity</tag>
        <tag>Rig</tag>
        <tag>Character</tag>
      </tags>
  </entry>
  <entry>
    <title>总结Unity中的材质节点工具</title>
    <url>/2020/09/29/unity/SummaryUnityShaderNodeEditor/</url>
    <content><![CDATA[<h1 id="总结一些使用过的材质节点工具"><a href="#总结一些使用过的材质节点工具" class="headerlink" title="总结一些使用过的材质节点工具"></a>总结一些使用过的材质节点工具</h1><h2 id="Shader-Forge"><a href="#Shader-Forge" class="headerlink" title="Shader Forge"></a>Shader Forge</h2><p>功能不多，早期提供给Unity使用，开源，代码比较混乱，使用手感不太好，没有组功能，也没有快速预览功能，编辑有卡顿现象，明显表现在拖拽时。</p>
<h2 id="Amplify-Shader-Editor"><a href="#Amplify-Shader-Editor" class="headerlink" title="Amplify Shader Editor"></a>Amplify Shader Editor</h2><p>功能强大，但仍有缺点，开源，代码可读性不高，编辑起来也不会很顺手，删除和添加都会有些许卡顿。没有快速预览功能。</p>
<h2 id="Shader-Graph"><a href="#Shader-Graph" class="headerlink" title="Shader Graph"></a>Shader Graph</h2><p>封装好的字段，仅供urp 和hdrp使用，限制比较大，但比较Unity官方提供的工具，兼容性较好，编辑手段较多，就是编辑不太顺手。</p>
<h2 id="Visual-Effect-Graph"><a href="#Visual-Effect-Graph" class="headerlink" title="Visual Effect Graph"></a>Visual Effect Graph</h2><p>没用过，不知道好坏，但是编辑器看起来很不错。</p>
<h2 id="Blender-Node-Editor"><a href="#Blender-Node-Editor" class="headerlink" title="Blender Node Editor"></a>Blender Node Editor</h2><p>有快速预览功能。<br>编辑非常顺手。<br>有组功能。<br>就是材质显示效果不太真实。（eevee跟Unity和ue4都有区别）</p>
<h2 id="Unreal-BulePrint"><a href="#Unreal-BulePrint" class="headerlink" title="Unreal BulePrint"></a>Unreal BulePrint</h2><p>可能是最早提出的节点编辑</p>
<h2 id="Worldmchine"><a href="#Worldmchine" class="headerlink" title="Worldmchine"></a>Worldmchine</h2><p>还不错，用了半年，专门用于制作地形高度图</p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>unity</tag>
        <tag>Editor</tag>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PPS自定义后处理着色器</title>
    <url>/2020/09/29/unity/UnityPostProcessingStack/</url>
    <content><![CDATA[<h1 id="自定义自己的后处理着色器"><a href="#自定义自己的后处理着色器" class="headerlink" title="自定义自己的后处理着色器"></a>自定义自己的后处理着色器</h1><p>首先需要安装插件PostProcssing Stack<br>然后使用HLSL编写自己的后处理着色器Image Effect </p>
<h2 id="HLSL"><a href="#HLSL" class="headerlink" title="HLSL"></a>HLSL</h2><p>顶点着色器(vertex Shader)<br>像素着色器(Pixel Shader)<br>HLSL基本语法</p>
<h1 id="自定义后处理着色器的设置界面"><a href="#自定义后处理着色器的设置界面" class="headerlink" title="自定义后处理着色器的设置界面"></a>自定义后处理着色器的设置界面</h1><p>继承Post Procssing Setting</p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>unity</tag>
        <tag>PostProcessingStack</tag>
      </tags>
  </entry>
  <entry>
    <title>unity的经验（杂）</title>
    <url>/2020/08/03/unity/unityMatrix/</url>
    <content><![CDATA[<p>在写shader或者制作shader graph 时候阅读shader代码经常会需要转译。</p>
<hr>
<h3 id="内置矩阵-支持的矩阵（float4x4）："><a href="#内置矩阵-支持的矩阵（float4x4）：" class="headerlink" title="内置矩阵 支持的矩阵（float4x4）："></a>内置矩阵 支持的矩阵（float4x4）：</h3><ul>
<li><p>UNITY_MATRIX_MVP              当前模型视图投影矩阵</p>
</li>
<li><p>UNITY_MATRIX_MV               当前模型视图矩阵</p>
</li>
<li><p>UNITY_MATRIX_V                当前视图矩阵。</p>
</li>
<li><p>UNITY_MATRIX_P                目前的投影矩阵</p>
</li>
<li><p>UNITY_MATRIX_VP               当前视图*投影矩阵</p>
<font color="lighgrey"> </li>
<li><p>UNITY_MATRIX_T_MV             移调模型视图矩阵 </p>
</font>
</li>
<li><p>UNITY_MATRIX_IT_MV            模型视图矩阵的逆转</p>
</li>
<li><p>UNITY_MATRIX_TEXTURE0         纹理变换矩阵<br>  UNITY_MATRIX_TEXTURE3            </p>
</li>
<li><p>UNITY_LIGHTMODEL_AMBIENT      当前环境的颜色</p>
</li>
</ul>
<hr>
<h3 id="在Amplify-shader-editor-里的坑"><a href="#在Amplify-shader-editor-里的坑" class="headerlink" title="在Amplify shader editor 里的坑"></a>在Amplify shader editor 里的坑</h3><p>如果需要转换以上矩阵，应该使用transform 节点进行转换为最好</p>
<hr>
<p>unity 读取文件时<br>    Assestdatabase.LoadAssetsAtPath<Type>(“Assets/..”);<br>    Resources.Load<Type>(“Assets/Resources/..”);</p>
<hr>
<h2 id="在defered-lighting-中实现transparency-透射效果"><a href="#在defered-lighting-中实现transparency-透射效果" class="headerlink" title="在defered lighting 中实现transparency 透射效果."></a>在defered lighting 中实现transparency 透射效果.</h2><pre><code>    //Work out where on screen this pixel in. This tells us where we need to read from in the light buffers

    float2 screenPos = input.PositionCS.xy / input.PositionCS.w;
    float2 texCoord = float2(
         (1 + screenPos.x) / 2 + (0.5 / Resolution.x),
         (1 - screenPos.y) / 2 + (0.5 / Resolution.y)
    );

    //The normal buffer alpha channel set to zero if nothing was written here. Sample the value as use zero-values as an early exit (a kind of stencil buffer)

    float4 sampledNormals = tex2D(normalSampler, texCoord);
    if (sampledNormals.a == 0)
        clip(-1);

    //This is the clever bit for back-face geometry. the depth of this vertex (input.Depth) is the back of the object...
    //...while the value in the depth buffer is the depth from the front of the geometry we rendered before into the gbuffer!
    //Thickness is easy to calculate.

    float backDepth = input.Depth;
    float frontDepth = tex2D(depthSampler, texCoord);
    float thickness = (backDepth - frontDepth) * (FarClip - NearClip);

    //This is the surface colour of the transparent object

    float3 opaque = tex2D(transparencyLightbufferSampler, texCoord).rgb;

    //This is the colour of the scene behind the object

    float3 background = tex2D(lightbufferSample, texCoord).rgb;

    //now blend them. Blending function varies per material

    return Blend(opaque, background, thickness);</code></pre>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>各种树形数据结构</title>
    <url>/2020/09/06/unity/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%91/</url>
    <content><![CDATA[<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><ul>
<li>一次等分存储</li>
<li>一阶储存器</li>
</ul>
<h1 id="四叉树"><a href="#四叉树" class="headerlink" title="四叉树"></a>四叉树</h1><ul>
<li>二维图像储存</li>
<li>二次等分细分</li>
</ul>
<h1 id="八叉树"><a href="#八叉树" class="headerlink" title="八叉树"></a>八叉树</h1><ul>
<li>三维空间数据储存体素</li>
<li>三次等分细分</li>
</ul>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>dataarchitecture</tag>
      </tags>
  </entry>
</search>
